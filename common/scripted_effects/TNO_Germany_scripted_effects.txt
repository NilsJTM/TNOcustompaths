### HISTORY ###
## 1962
GER_HIST_Generals_62 = {
	log = "[GetDateText]: [This.GetName]: GER_HIST_Generals_62; Executing"

	## Speidel-aligned
	create_field_marshal = {
		name = "Hans Speidel"
		picture = "Portrait_Germany_Hans_Speidel.dds"
		desc = "MILITARY_HANS_SPEIDEL_DESC"
		traits = { trait_cautious organizer thorough_planner skilled_staffer  }
		skill = 4
		attack_skill = 3
		defense_skill = 3
		planning_skill = 4
		logistics_skill = 4
		id = 70
	}

	create_corps_commander = {
		name = "Adolf Heusinger"
		picture = "Portrait_GER_Adolf_Heusinger.dds"
		traits = { career_officer organizer }
		skill = 3
		attack_skill = 2
		defense_skill = 1
		planning_skill = 4
		logistics_skill = 3
		id = 96
	}
	create_corps_commander = {
		name = "Fritz Bayerlein"
		picture = "Portrait_GER_Fritz_Bayerlein.dds"
		traits = { panzer_leader trait_mountaineer desert_fox }
		skill = 4
		attack_skill = 4
		defense_skill = 3
		planning_skill = 4
		logistics_skill = 2
		id = 101
	}
	create_corps_commander = {
		name = "Ulrich de Maizière"
		picture = "Portrait_GER_Ulrich_de_Maiziere.dds"
		traits = { inflexible_strategist infantry_leader  }
		skill = 2
		attack_skill = 2
		defense_skill = 2
		planning_skill = 1
		logistics_skill = 2
		id = 106
	}
	create_corps_commander = {
		name = "Wolf Graf von Baudissin"
		picture = "Portrait_GER_Wolf_Graf_von_Baudissin.dds"
		traits = { armor_officer trickster desert_fox }
		skill = 3
		attack_skill = 3
		defense_skill = 2
		planning_skill = 3
		logistics_skill = 2
		id = 108
	}
	create_corps_commander = {
		name = "Axel von dem Bussche"
		picture = "Portrait_GER_Axel_von_dem_Bussche.dds"
		traits = { infantry_officer trait_cautious trait_engineer trickster }
		skill = 2
		attack_skill = 1
		defense_skill = 2
		planning_skill = 3
		logistics_skill = 1
		id = 110
	}
	create_corps_commander = {
		name = "Otto Hitzfeld"
		picture = "Portrait_GER_Otto_Hitzfeld.dds"
		traits = { infantry_officer infantry_leader infantry_expert }
		skill = 3
		attack_skill = 3
		defense_skill = 3
		planning_skill = 2
		logistics_skill = 2
		id = 113
	}
	create_corps_commander = {
		name = "Bern von Baer"
		picture = "Portrait_GER_Bern_von_Baer.dds"
		traits = { commando skirmisher }
		skill = 2
		attack_skill = 2
		defense_skill = 1
		planning_skill = 2
		logistics_skill = 2
		id = 116
	}
	create_corps_commander = {
		name = "Alfred Zerbel"
		picture = "Portrait_GER_Alfred_Zerbel.dds"
		traits = { infantry_officer panzer_leader winter_specialist }
		skill = 2
		attack_skill = 1
		defense_skill = 1
		planning_skill = 2
		logistics_skill = 3
		id = 117
	}
	#

	## Bormann-aligned
	create_field_marshal = {
		name = "Wilhelm Burgdorf"
		picture = "Portrait_Germany_Wilhelm_Burgdorf.dds"
		traits = { infantry_officer old_guard organizer infantry_expert infantry_leader }
		skill = 4
		attack_skill = 2
		defense_skill = 2
		planning_skill = 3
		logistics_skill = 3
		id = 403
	}
	#create_field_marshal = {
	#	name = "Claus von Stauffenberg"
	#	picture = "Portrait_Germany_Claus_von_Stauffenberg.dds"
	#	traits = { cavalry_officer politically_connected war_hero panzer_leader desert_fox }
	#	skill = 4
	#	attack_skill = 3
	#	defense_skill = 4
	#	planning_skill = 4
	#	logistics_skill = 2
	#	id = 404
	#}
	create_field_marshal = {
		name = "Walther Wenck"
		picture = "Portrait_GER_Walther_Wenck.dds"
		traits = { armor_officer brilliant_strategist unyielding_defender trickster expert_improviser }
		skill = 3
		attack_skill = 2
		defense_skill = 3
		planning_skill = 3
		logistics_skill = 2
		id = 107
	}

	create_corps_commander = {
		name = "Albert Schnez"
		picture = "Portrait_GER_Albert_Schnez.dds"
		traits = { trait_reckless trickster guerilla_fighter }
		skill = 3
		attack_skill = 4
		defense_skill = 2
		planning_skill = 1
		logistics_skill = 3
		id = 71
	}
	create_corps_commander = {
		name = "Heinrich Trettner"
		picture = "Portrait_GER_Heinrich_Trettner.dds"
		traits = { war_hero commando paratrooper }
		skill = 3
		attack_skill = 3
		defense_skill = 2
		planning_skill = 3
		logistics_skill = 2
		id = 73
	}
	create_corps_commander = {
		name = "Günther Smend"
		picture = "Portrait_GER_Gunther_Smend.dds"
		traits = { infantry_officer bearer_of_artillery hill_fighter }
		skill = 2
		attack_skill = 2
		defense_skill = 1
		planning_skill = 2
		logistics_skill = 2
		id = 84
	}
	create_corps_commander = {
		name = "Hans Krebs"
		picture = "Portrait_GER_Hans_Krebs.dds"
		traits = { career_officer infantry_officer infantry_leader }
		skill = 3
		attack_skill = 4
		defense_skill = 3
		planning_skill = 1
		logistics_skill = 2
		id = 103
	}
	create_corps_commander = {
		name = "Joachim Sadrozinski"
		picture = "Portrait_GER_Joachim_Sadrozinski.dds"
		traits = { career_officer organizer skilled_staffer }
		skill = 2
		attack_skill = 1
		defense_skill = 2
		planning_skill = 2
		logistics_skill = 2
		id = 88
	}
	create_corps_commander = {
		name = "Karl-Adolf Hollidt"
		picture = "Portrait_GER_Karl_Adolf_Hollidt.dds"
		traits = { old_guard infantry_leader infantry_expert }
		skill = 3
		attack_skill = 3
		defense_skill = 4
		planning_skill = 2
		logistics_skill = 4
		id = 89
	}
	create_corps_commander = {
		name = "Georg von Boeslager"
		picture = "Portrait_GER_Georg_von_Boeslager.dds"
		traits = { cavalry_officer harsh_leader urban_assault_specialist }
		skill = 2
		attack_skill = 2
		defense_skill = 1
		planning_skill = 3
		logistics_skill = 1
		id = 78
	}
	#

	## Göring-aligned
	create_field_marshal = {
		name = "Ferdinand Schörner"
		picture = "Portrait_Germany_Ferdinand_Schorner.dds"
		traits = { war_hero harsh_leader skilled_staffer expert_delegator trait_mountaineer }
		desc = "GENERAL_FERDINAND_SCHORNER_DESC"
		skill = 4
		attack_skill = 4
		defense_skill = 3
		planning_skill = 4
		logistics_skill = 2
		id = 122
	}
	create_field_marshal = {
		name = "Johann von Kielmansegg"
		picture = "Portrait_GER_Johann_von_Kielmansegg.dds"
		traits = { career_officer cavalry_officer infantry_leader offensive_doctrine }
		skill = 3
		attack_skill = 3
		defense_skill = 2
		planning_skill = 3
		logistics_skill = 2
		id = 75
	}
	create_field_marshal = {
		name = "Eduard Wagner"
		desc = "GENERAL_EDUARD_WAGNER"
		picture = "Portrait_GER_Eduard_Wagner.dds"
		traits = { old_guard organizer logistics_wizard thorough_planner }
		skill = 4
		attack_skill = 2
		defense_skill = 2
		planning_skill = 3
		logistics_skill = 5
		id = 81
	}

	create_corps_commander = {
		name = "Friedrich August Freiherr von der Heydte"
		picture = "Portrait_GER_Friedrich_August_Freiherr_von_der_Heydte.dds"
		traits = { media_personality commando paratrooper }
		skill = 3
		attack_skill = 3
		defense_skill = 2
		planning_skill = 3
		logistics_skill = 2
		id = 98
	}
	create_corps_commander = {
		name = "Friedrich Foertsch"
		picture = "Portrait_GER_Friedrich_Foertsch.dds"
		traits = { old_guard infantry_officer infantry_leader winter_specialist }
		skill = 3
		attack_skill = 2
		defense_skill = 3
		planning_skill = 2
		logistics_skill = 3
		id = 99
	}
	create_corps_commander = {
		name = "Gerhard von Schwerin"
		picture = "Portrait_GER_Gerhard_von_Schwerin.dds"
		traits = { commando desert_fox winter_specialist }
		skill = 4
		attack_skill = 4
		defense_skill = 3
		planning_skill = 2
		logistics_skill = 4
		id = 102
	}
	create_corps_commander = {
		name = "Heinz-Georg Lemm"
		picture = "Portrait_GER_Heinz_Georg_Lemm.dds"
		traits = { panzer_leader trickster }
		skill = 2
		attack_skill = 3
		defense_skill = 2
		planning_skill = 1
		logistics_skill = 1
		id = 74
	}
	create_corps_commander = {
		name = "Leo Hepp"
		picture = "Portrait_GER_Leo_Hepp.dds"
		traits = { infantry_officer organizer hill_fighter }
		skill = 2
		attack_skill = 2
		defense_skill = 1
		planning_skill = 1
		logistics_skill = 3
		id = 104
	}
	create_corps_commander = {
		name = "Alfred Becker"
		picture = "Portrait_GER_Alfred_Becker.dds"
		traits = { bearer_of_artillery trait_engineer }
		skill = 2
		attack_skill = 2
		defense_skill = 1
		planning_skill = 2
		logistics_skill = 2
		id = 118
	}
	create_corps_commander = {
		name = "Erich Bärenfänger"
		picture = "Portrait_GER_Erich_Barenfanger.dds"
		traits = { infantry_officer trait_reckless urban_assault_specialist }
		skill = 2
		attack_skill = 1
		defense_skill = 3
		planning_skill = 2
		logistics_skill = 1
		id = 119
	}
	create_corps_commander = {
		name = "Hans-Joachim 'Hajo' Herrmann"
		picture = "Portrait_GER_Hans_Joachim_Herrmann.dds"
		traits = { politically_connected infantry_officer commando camouflage_expert }
		skill = 2
		attack_skill = 2
		defense_skill = 2
		planning_skill = 1
		logistics_skill = 1
		id = 120
	}
	create_corps_commander = {
		name = "Harald von Hirschfeld"
		picture = "Portrait_GER_Harald_von_Hirschfeld.dds"
		traits = { harsh_leader trait_mountaineer }
		skill = 2
		attack_skill = 2
		defense_skill = 2
		planning_skill = 2
		logistics_skill = 3
		id = 1110
	}
	create_corps_commander = {
		name = "Otto Ernst Remer"
		picture = "Portrait_GER_Otto_Ernst_Remer.dds"
		traits = { infantry_leader urban_assault_specialist }
		desc = "GENERAL_OTTO_REMER_DESC"
		skill = 3
		attack_skill = 2
		defense_skill = 3
		planning_skill = 2
		logistics_skill = 2
		id = 1120
	}
	create_corps_commander = {
		name = "Theodor Tolsdorff"
		picture = "Portrait_GER_Theodor_Tolsdorff.dds"
		traits = { trait_reckless panzer_leader winter_specialist }
		skill = 4
		attack_skill = 3
		defense_skill = 1
		planning_skill = 2
		logistics_skill = 2
		id = 1140
	}
	create_corps_commander = {
		name = "Werner Mummert"
		picture = "Portrait_GER_Werner_Mummert.dds"
		traits = { trait_reckless panzer_leader trickster }
		skill = 3
		attack_skill = 2
		defense_skill = 2
		planning_skill = 3
		logistics_skill = 1
		id = 1150
	}

	#

	## Speer-aligned
	create_field_marshal = {
		name = "Rudolf-Christoph Freiherr von Gersdorff"
		picture = "Portrait_GER_Rudolf_Christoph_Freiherr_von_Gersdorff.dds"
		traits = { cavalry_officer career_officer trait_engineer trickster  }
		skill = 2
		attack_skill = 2
		defense_skill = 1
		planning_skill = 3
		logistics_skill = 3
		id = 123
	}
	create_field_marshal = {
		name = "Henning von Tresckow"
		picture = "Portrait_Germany_Henning_von_Tresckow.dds"
		desc = "MILITARY_HENNING_VON_TRESCKOW_DESC"
		traits = { old_guard infantry_officer politically_connected thorough_planner organizer }
		skill = 4
		attack_skill = 2
		defense_skill = 3
		planning_skill = 1
		logistics_skill = 2
		id = 150
	}

	create_corps_commander = {
		name = "Alexis von Roenne"
		picture = "Portrait_GER_Alexis_von_Roenne.dds"
		traits = { politically_connected organizer trickster  }
		skill = 2
		attack_skill = 1
		defense_skill = 2
		planning_skill = 4
		logistics_skill = 2
		id = 80
	}
	create_corps_commander = {
		name = "Ewald-Heinrich von Kleist-Schmenzin"
		picture = "Portrait_GER_Ewald_Heinrich_von_Kleist_Schmenzin.dds"
		traits = { politically_connected panzer_leader }
		skill = 2
		attack_skill = 2
		defense_skill = 2
		planning_skill = 1
		logistics_skill = 3
		id = 82
	}
	create_corps_commander = {
		name = "Hans Ulrich von Oertzen"
		picture = "Portrait_GER_Hans_Ulrich_von_Oertzen.dds"
		traits = { trickster guerilla_fighter }
		skill = 2
		attack_skill = 2
		defense_skill = 1
		planning_skill = 3
		logistics_skill = 1
		id = 85
	}
	create_corps_commander = {
		name = "Philipp von Boeselager"
		picture = "Portrait_GER_Philipp_von_Boeselager.dds"
		traits = { cavalry_officer trait_cautious ranger  }
		skill = 2
		attack_skill = 2
		defense_skill = 1
		planning_skill = 2
		logistics_skill = 2
		id = 91
	}
	create_corps_commander = {
		name = "Carl Szokoll"
		picture = "Portrait_GER_Carl_Szokoll.dds"
		traits = { infantry_leader urban_assault_specialist }
		skill = 1
		attack_skill = 1
		defense_skill = 1
		planning_skill = 2
		logistics_skill = 3
		id = 97
	}
	create_corps_commander = {
		name = "Wessel Freytag von Loringhoven"
		picture = "Portrait_GER_Wessel_Freytag_von_Loringhoven.dds"
		traits = { trait_cautious infantry_leader }
		skill = 2
		attack_skill = 2
		defense_skill = 2
		planning_skill = 1
		logistics_skill = 1
		id = 124
	}
	create_corps_commander = {
		name = "Hellmuth Stieff"
		picture = "Portrait_GER_Hellmuth_Stieff.dds"
		traits = { infantry_officer organizer infantry_leader }
		skill = 3
		attack_skill = 3
		defense_skill = 2
		planning_skill = 4
		logistics_skill = 2
		id = 126
	}
	create_corps_commander = {
		name = "Friedrich Klausing"
		picture = "Portrait_GER_Friedrich_Klausing.dds"
		traits = { winter_specialist urban_assault_specialist }
		skill = 3
		attack_skill = 3
		defense_skill = 2
		planning_skill = 1
		logistics_skill = 2
		id = 127
	}
	#

	## Heydrich-aligned
	create_field_marshal = {
		name = "Karl Hanke"
		picture = "Portrait_Germany_Karl_Hanke.dds"
		traits = { old_guard panzer_leader defensive_doctrine }
		skill = 2
		attack_skill = 2
		defense_skill = 1
		planning_skill = 3
		logistics_skill = 1
		id = 76
	}
	create_field_marshal = {
		name = "Herbert Otto Gille"
		picture = "Portrait_GER_Herbert_Otto_Gille.dds"
		traits = { war_hero aggressive_assaulter panzer_leader winter_specialist }
		skill = 4
		attack_skill = 4
		defense_skill = 3
		planning_skill = 2
		logistics_skill = 4
		id = 121
	}

	create_corps_commander = {
		name = "Heinz Harmel"
		picture = "Portrait_GER_Heinz_Harmel.dds"
		traits = { inflexible_strategist ranger urban_assault_specialist }
		skill = 2
		attack_skill = 2
		defense_skill = 2
		planning_skill = 2
		logistics_skill = 1
		id = 86
	}
	create_corps_commander = {
		name = "Hugo Kraas"
		picture = "Portrait_GER_Hugo_Kraas.dds"
		traits = { commando hill_fighter }
		skill = 3
		attack_skill = 2
		defense_skill = 2
		planning_skill = 3
		logistics_skill = 3
		id = 87
	}
	create_corps_commander = {
		name = "Otto Kumm"
		picture = "Portrait_GER_Otto_Kumm.dds"
		traits = { trait_reckless infantry_leader }
		skill = 3
		attack_skill = 3
		defense_skill = 3
		planning_skill = 2
		logistics_skill = 2
		id = 90
	}
	create_corps_commander = {
		name = "Ernst Barkmann"
		picture = "Portrait_GER_Enst_Bakmann.dds"
		traits = { armor_officer brilliant_strategist panzer_leader }
		skill = 2
		attack_skill = 3
		defense_skill = 2
		planning_skill = 1
		logistics_skill = 1
		id = 92
	}
	create_corps_commander = {
		name = "Erich Naumann"
		picture = "Portrait_GER_Erich_Naumann.dds"
		traits = { trickster organizer }
		skill = 1
		attack_skill = 1
		defense_skill = 1
		planning_skill = 1
		logistics_skill = 1
		id = 93
	}
	create_corps_commander = {
		name = "Georg Bochmann"
		picture = "Portrait_GER_Georg_Bochmann.dds"
		traits = { panzer_leader combined_arms_expert winter_specialist }
		skill = 3
		attack_skill = 2
		defense_skill = 2
		planning_skill = 3
		logistics_skill = 3
		id = 94
	}
	create_corps_commander = {
		name = "Hermann Prieß"
		picture = "Portrait_GER_Hermann_Priess.dds"
		traits = { career_officer panzer_leader trickster }
		skill = 3
		attack_skill = 3
		defense_skill = 2
		planning_skill = 2
		logistics_skill = 3
		id = 95
	}
	create_corps_commander = {
		name = "Sylvester Stadler"
		picture = "Portrait_GER_Sylvester_Stadler.dds"
		traits = { infantry_leader ranger winter_specialist }
		skill = 3
		attack_skill = 4
		defense_skill = 2
		planning_skill = 1
		logistics_skill = 3
		id = 105
	}
	#

	log = "[GetDateText]: [This.GetName]: GER_HIST_Generals_62; Completed execution."
}
GER_HIST_Admirals_62 = {
	log = "[GetDateText]: [This.GetName]: GER_HIST_Admirals_62; Executing"

	## Dönitz
	create_navy_leader = {
		name = "Karl Dönitz"
		picture =  "Portrait_GER_Karl_Donitz.dds"
		traits = { navy_career_officer seawolf superior_tactician blockade_runner }

		skill = 5
		attack_skill = 5
		defense_skill = 3
		maneuvering_skill = 5
		coordination_skill = 5

		id = 193
	}

	## Speidel-aligned
	create_navy_leader = {
		name = "Erich Topp"
		picture = "Portrait_GER_Erich_Topp.dds"
		traits = { navy_career_officer seawolf spotter }

		skill = 4
		attack_skill = 5
		defense_skill = 4
		maneuvering_skill = 4
		coordination_skill = 4

		id = 128
	}
	create_navy_leader = {
		name = "Horst von Schroeter"
		picture = "Portrait_GER_Horst_von_Schroeter.dds"
		traits = { seawolf }

		skill = 3
		attack_skill = 3
		defense_skill = 3
		maneuvering_skill = 3
		coordination_skill = 4

		id = 129
	}
	create_navy_leader = {
		name = "Otto Ites"
		picture = "Portrait_GER_Otto_Ites.dds"
		traits = { spotter }

		skill = 2
		attack_skill = 2
		defense_skill = 2
		maneuvering_skill = 2
		coordination_skill = 2

		id = 147
	}
	create_navy_leader = {
		name = "Hans-Rudolf Rösing"
		picture = "Portrait_GER_Hans_Rudolf_Rosing.dds"
		traits = { naval_lineage seawolf superior_tactician }

		skill = 3
		attack_skill = 3
		defense_skill = 4
		maneuvering_skill = 2
		coordination_skill = 4

		id = 148
	}
	create_navy_leader = {
		name = "Robert Gysae"
		picture = "Portrait_GER_Robert_Gysae.dds"
		traits = { seawolf }

		skill = 2
		attack_skill = 2
		defense_skill = 2
		maneuvering_skill = 2
		coordination_skill = 1

		id = 149
	}
	#

	## Bormann-aligned
	create_navy_leader = {
		name = "Hans-Georg von Friedeburg"
		picture = "Portrait_GER_Hans_Georg_von_Freidburg.dds"
		traits = { old_guard_navy seawolf }

		skill = 3
		attack_skill = 2
		defense_skill = 3
		maneuvering_skill = 3
		coordination_skill = 3

		id = 134
	}
	create_navy_leader = {
		name = "Helmuth Brinkmann"
		picture = "Portrait_GER_Helmuth_Brinkmann.dds"
		traits = { blockade_runner }

		skill = 3
		attack_skill = 2
		defense_skill = 3
		maneuvering_skill = 3
		coordination_skill = 3

		id = 135
	}
	create_navy_leader = {
		name = "Wilhelm Meendsen-Bohlken"
		picture = "Portrait_GER_Wilhelm_Meendsen_Bohlken.dds"
		traits = { gunnery_expert }

		skill = 3
		attack_skill = 2
		defense_skill = 2
		maneuvering_skill = 3
		coordination_skill = 3

		id = 136
	}
	create_navy_leader = {
		name = "Otto Kretschmer"
		picture = "Portrait_GER_Otto_Kretschmer.dds"
		traits = { navy_career_officer gentlemanly bold seawolf lancer spotter superior_tactician }

		skill = 5
		attack_skill = 5
		defense_skill = 4
		maneuvering_skill = 3
		coordination_skill = 5

		id = 137
	}
	create_navy_leader = {
		name = "Herbert Schultze"
		picture = "Portrait_GER_Herbert_Schultze.dds"
		traits = { seawolf }

		skill = 2
		attack_skill = 2
		defense_skill = 2
		maneuvering_skill = 2
		coordination_skill = 1 #mistakenly ignored orders causing missed opportunity to sink British carrier

		id = 138
	}
	#

	## Göring-aligned
	create_navy_leader = {
		name = "Otto von Bülow"
		picture = "Portrait_Germany_Otto_von_Bulow.dds"
		traits = { naval_lineage seawolf }

		skill = 2
		attack_skill = 2
		defense_skill = 2
		maneuvering_skill = 2
		coordination_skill = 2

		id = 79
	}
	create_navy_leader = {
		name = "Armin Zimmermann"
		picture = "Portrait_GER_Armin_Zimmermann.dds"
		traits = { fly_swatter }

		skill = 3
		attack_skill = 2
		defense_skill = 2
		maneuvering_skill = 3
		coordination_skill = 4

		id = 109
	}
	create_navy_leader = {
		name = "Karl-Jesko von Puttkamer"
		picture = "Portrait_GER_Karl_Jesko_von_Puttkamer.dds"
		traits = { bold spotter }
		desc = "ADMIRAL_KARL_JESKO_VON_PUTTKAMER"
		skill = 2
		attack_skill = 2
		defense_skill = 3
		maneuvering_skill = 2
		coordination_skill = 2

		id = 139
	}
	create_navy_leader = {
		name = "Karl-Friedrich Merten"
		picture = "Portrait_GER_Karl_Friedrich_Merten.dds"
		traits = { gunnery_expert gentlemanly seawolf }

		skill = 3
		attack_skill = 4
		defense_skill = 3
		maneuvering_skill = 3
		coordination_skill = 3

		id = 140
	}
	create_navy_leader = {
		name = "Heinrich Lehmann-Willenbrock"
		picture = "Portrait_GER_Heinrich_Lehmann_Willenbrock.dds"
		traits = { seawolf spotter }

		skill = 4
		attack_skill = 4
		defense_skill = 4
		maneuvering_skill = 4
		coordination_skill = 3

		id = 141
	}
	create_navy_leader = {
		name = "Bernhard Rogge"
		picture = "Portrait_GER_Bernhard_Rogge.dds"
		traits = { old_guard_navy }
		skill = 3
		attack_skill = 3
		defense_skill = 3
		maneuvering_skill = 3
		coordination_skill = 3
		id = 154
	}
	create_navy_leader = {
		name = "Heinz Kühnle"
		picture = "Portrait_GER_Heinz_Kuhnle.dds"
		traits = { spotter }
		skill = 2
		attack_skill = 2
		defense_skill = 2
		maneuvering_skill = 2
		coordination_skill = 2

		id = 155
	}
	#

	## Speer-aligned
	create_navy_leader = {
		name = "Günter Luther"
		picture = "Portrait_GER_Gunter_Luther.dds"
		traits = { fly_swatter air_controller }

		skill = 4
		attack_skill = 3
		defense_skill = 3
		maneuvering_skill = 4
		coordination_skill = 4

		id = 69
	}
	create_navy_leader = {
		name = "Wilhelm Ehm"
		picture = "Portrait_GER_Wilhelm_Ehm.dds"
		traits = { }

		skill = 2
		attack_skill = 1
		defense_skill = 2
		maneuvering_skill = 1
		coordination_skill = 2

		id = 131
	}
	create_navy_leader = {
		name = "Hellmuth Heye"
		picture = "Portrait_GER_Hellmuth_Heye.dds"
		traits = { old_guard_navy blockade_runner }

		skill = 2
		attack_skill = 2
		defense_skill = 2
		maneuvering_skill = 2
		coordination_skill = 2

		id = 132
	}
	create_navy_leader = {
		name = "Gerhard Wagner"
		picture = "Portrait_GER_Gerhard_Wagner.dds"
		traits = { blockade_runner }

		skill = 3
		attack_skill = 3
		defense_skill = 3
		maneuvering_skill = 2
		coordination_skill = 2

		id = 133
	}
	create_navy_leader = {
		name = "Friedrich Guggenberger"
		picture = "Portrait_GER_Friedrich_Guggenberger.dds"
		traits = { seawolf spotter }

		skill = 4
		attack_skill = 4
		defense_skill = 3
		maneuvering_skill = 4
		coordination_skill = 3

		id = 130
	}
	#

	## Heydrich-aligned
	create_navy_leader = {
		name = "Günther Prien"
		picture = "Portrait_GER_Gunther_Prien.dds"
		traits = { caustic_personality seawolf }

		skill = 3
		attack_skill = 4
		defense_skill = 3
		maneuvering_skill = 2
		coordination_skill = 4

		id = 142
	}
	create_navy_leader = {
		name = "Theodor Hoffmann"
		picture = "Portrait_GER_Theodor_Hoffmann.dds"
		traits = { ironside }

		skill = 2
		attack_skill = 2
		defense_skill = 2
		maneuvering_skill = 2
		coordination_skill = 2

		id = 143
	}
	create_navy_leader = {
		name = "Friedrich Ruge"
		picture = "Portrait_GER_Friedrich_Ruge.dds"
		traits = { old_guard_navy spotter mine_sweeper }
		skill = 3
		attack_skill = 1
		defense_skill = 3
		maneuvering_skill = 3
		coordination_skill = 1
		id = 144
	}
	create_navy_leader = {
		name = "Wilhelm Meentzen"
		picture = "Portrait_GER_Wilhelm_Meentzen.dds"
		traits = { blockade_runner fleet_protector }

		skill = 2
		attack_skill = 2
		defense_skill = 3
		maneuvering_skill = 2
		coordination_skill = 1

		id = 145
	}
	create_navy_leader = {
		name = "Ansgar Bethge"
		picture = "Portrait_GER_Ansgar_Bethge.dds"
		traits = { spotter }

		skill = 2
		attack_skill = 1
		defense_skill = 2
		maneuvering_skill = 3
		coordination_skill = 2

		id = 146
	}
	#

	log = "[GetDateText]: [This.GetName]: GER_HIST_Admirals_62; Completed execution."
}
GER_HIST_Production_Equipment_62 = {
	log = "[GetDateText]: [This.GetName]: GER_HIST_Production_Equipment_62; Executing"


	### Production

	create_equipment_variant = {
		name = "Adler Class"
		type = ship_hull_carrier_3
		name_group = GER_CV_HISTORICAL
		parent_version = 0
		modules = {
			fixed_ship_deck_slot_1 = ship_deck_space
			fixed_ship_deck_slot_2 = ship_deck_space
			fixed_ship_anti_air_slot = ship_anti_air_2
			fixed_ship_radar_slot = ship_radar_1
			fixed_ship_engine_slot = carrier_ship_engine_3
			fixed_ship_secondaries_slot = ship_secondaries_2
			front_1_custom_slot = ship_armor_carrier_deck
			mid_1_custom_slot = ship_deck_space
			mid_2_custom_slot = ship_deck_space
		}
	}
	create_equipment_variant = {
		name = "Adler Class"
		type = carrier_3
		parent_version = 0
	}
		# Navy
	if = {
		limit = { has_dlc = "Man the Guns" }
		add_equipment_production = {
			equipment = {
				type = ship_hull_carrier_3
				creator = "GER"
				version_name = "Adler Class"
			}
			requested_factories = 5
			progress = 0.98
			amount = 1
		}
		else = {
			add_equipment_production = {
				equipment = {
					type = carrier_3
					creator = "GER"
					version_name = "Adler Class"
				}
				requested_factories = 5
				progress = 0.98
				amount = 1
			}
		}
	}

		## Infantry
	add_equipment_production = {
		equipment = {
			type = infantry_equipment_2
			creator = "GER"
		}
		requested_factories = 12
		progress = 0.3
		efficiency = 50
	}
	add_equipment_production = {
		equipment = {
			type = support_equipment_1
			creator = "GER"
		}
		requested_factories = 8
		progress = 0.3
		efficiency = 50
	}
	add_equipment_production = {
		equipment = {
			type = artillery_equipment_3
			creator = "GER"
		}
		requested_factories = 6
		progress = 0.6
		efficiency = 50
	}
	add_equipment_production = {
		equipment = {
			type = anti_tank_equipment_0
			creator = "GER"
		}
		requested_factories = 4
		progress = 0.2
		efficiency = 50
	}
		#

		## Motorized, Mechanized & Tanks
	add_equipment_production = {
		equipment = {
			type = motorized_equipment_1
			creator = "GER"
		}
		requested_factories = 3
		progress = 0.1
		efficiency = 50
	}
	add_equipment_production = {
		equipment = {
			type = MBT_equipment_2
			creator = "GER"
		}
		requested_factories = 5
		progress = 0.1
		efficiency = 50
	}
		#

		## Aircraft
	add_equipment_production = {
		equipment = {
			type = jet_fighter_equipment_1
			creator = "GER"
		}
		requested_factories = 5
		progress = 0.1
		efficiency = 50
	}
	add_equipment_production = {
		equipment = {
			type = jet_interceptor_equipment_1
			creator = "GER"
		}
		requested_factories = 3
		progress = 0.1
		efficiency = 50
	}
	add_equipment_production = {
		equipment = {
			type = attack_helicopter_equipment_1
			creator = "GER"
		}
		requested_factories = 5
		progress = 0.1
		efficiency = 50
	}
		#
	#

	### Equipment
		## Missiles
	add_equipment_to_stockpile = {
		type = ICBM_equipment
		amount = 700
		producer = GER
	}
	add_equipment_to_stockpile = {
		type = MRBM_equipment
		amount = 600
		producer = GER
	}
	add_equipment_to_stockpile = {
		type = SRBM_equipment
		amount = 100
		producer = GER
	}
		#
	#

	log = "[GetDateText]: [This.GetName]: GER_HIST_Production_Equipment_62; Completed execution."
}

### GCW EFFECTS ###

GER_GCW_select_victor = { #Used only in a purely AI GCW if the war has run on for too long

	#Meant to operate using a points based system, to attempt to gauge the prospective victor.

	#Speer
	if = {
		limit = { country_exists = SGR }
		SGR = {
			set_variable = { GCW_manpower = num_divisions }
			set_variable = { GCW_equipment = num_equipment_in_armies_k@infantry_equipment }
			set_variable = { GCW_surrender_progress = surrender_progress }
		}
	}
	#Bormann
	if = {
		limit = { country_exists = BGR }
		BGR = {
			set_variable = { GCW_manpower = num_divisions }
			set_variable = { GCW_equipment = num_equipment_in_armies_k@infantry_equipment }
			set_variable = { GCW_surrender_progress = surrender_progress }
		}
	}
	#Göring - Locked as goering is too disruptive for anyone not playing germany
	#if = {
	#	limit = { country_exists = GGR }
	#	GGR = {
	#		set_variable = { GCW_manpower = num_divisions }
	#		set_variable = { GCW_equipment = num_equipment_in_armies_k@infantry_equipment }
	#		set_variable = { GCW_surrender_progress = surrender_progress }
	#	}
	#}

	#Point distribution

	#Fielded divisions
	if = {
		limit = {
			check_variable = { SGR.GCW_manpower > BGR.GCW_manpower }
			check_variable = { SGR.GCW_manpower > GGR.GCW_manpower }
		}
		add_to_variable = { SGR_points = 1 }
		else_if = {
			limit = {
				check_variable = { GGR.GCW_manpower > SGR.GCW_manpower }
				check_variable = { GGR.GCW_manpower > BGR.GCW_manpower }
			}
			add_to_variable = { GGR_points = 1 }
		}
		else = {
			add_to_variable = { BGR_points = 1 }
		}
	}

	#Equipment
	if = {
		limit = {
			check_variable = { SGR.GCW_equipment > BGR.GCW_equipment }
			check_variable = { SGR.GCW_equipment > GGR.GCW_equipment }
		}
		add_to_variable = { SGR_points = 1 }
		else_if = {
			limit = {
				check_variable = { GGR.GCW_equipment > SGR.GCW_equipment }
				check_variable = { GGR.GCW_equipment > BGR.GCW_equipment }
			}
			add_to_variable = { GGR_points = 1 }
		}
		else = {
			add_to_variable = { BGR_points = 1 }
		}
	}

	#Surrender progress
	if = {
		limit = {
			check_variable = { SGR.GCW_surrender_progress < BGR.GCW_surrender_progress }
			check_variable = { SGR.GCW_surrender_progress < GGR.GCW_surrender_progress }
		}
		add_to_variable = { SGR_points = 1 }
		else_if = {
			limit = {
				check_variable = { GGR.GCW_surrender_progress < SGR.GCW_surrender_progress }
				check_variable = { GGR.GCW_surrender_progress < BGR.GCW_surrender_progress }
			}
			add_to_variable = { GGR_points = 1 }
		}
		else = {
			add_to_variable = { BGR_points = 1 }
		}
	}

	#Adding Führer selection boni

	if = {
		limit = {
			GER = { has_country_flag = bormann_for_germany }
		}
		add_to_variable = { BGR_points = 2 }

		else_if = {
			limit = {
				GER = { has_country_flag = goring_for_germany }
			}
			add_to_variable = { GGR_points = 2 }
		}

		else_if = {
			limit = {
				GER = { has_country_flag = speer_for_germany }
			}
			add_to_variable = { SGR_points = 2 }
		}
	}

	#Choosing the victor
	if = {
		limit = {
			check_variable = { SGR_points > GGR_points }
			check_variable = { SGR_points > BGR_points }
		}
		SGR = { add_ideas = GCW_hidden_holy_shit_win_already }
		BGR = { add_ideas = BOR_out_of_time }
		GGR = { add_ideas = BOR_out_of_time }
		else_if = {
			limit = {
				check_variable = { GGR_points > SGR_points }
				check_variable = { GGR_points > BGR_points }
			}
			GGR = { add_ideas = GCW_hidden_holy_shit_win_already }
			BGR = { add_ideas = BOR_out_of_time }
			SGR = { add_ideas = BOR_out_of_time }
		}
		else = {
			BGR = { add_ideas = GCW_hidden_holy_shit_win_already }
			SGR = { add_ideas = BOR_out_of_time }
			GGR = { add_ideas = BOR_out_of_time }
		}
	}
}

GER_GCW_econ_setup = {
	TNO_startup_nation = yes # Needs to be run first

	## Econ Variable Initiation
	set_variable = { GDP_growth = -1.1 }
	set_variable = { base_inflation_rate = 0.68 }
	set_variable = { income_tax_rate = 0.42 }
	set_variable = { business_tax_rate = 0.56 }
	set_variable = { poverty_rate = 44.12 }
	set_variable = { poverty_monthly_change = -0.87 }



	initiate_display_vars = yes

	## Slider Positions
	army_funding_maximal_set_position_20 = yes
	army_funding_minimal_set_position_0 = yes

	naval_funding_maximal_set_position_20 = yes
	naval_funding_minimal_set_position_0 = yes

	social_funding_maximal_set_position_10 = yes
	social_funding_minimal_set_position_0 = yes

	admin_funding_maximal_set_position_10 = yes
	admin_funding_minimal_set_position_0 = yes

	research_funding_maximal_set_position_10 = yes
	research_funding_minimal_set_position_0 = yes

	consumer_goods_maximal_set_position_20 = yes
	consumer_goods_minimal_set_position_0 = yes

	## Credit Rating
	set_temp_variable = { temp_credit_rating_min = 2 }
	set_temp_variable = { temp_credit_rating_max = 5 }
	set_temp_variable = { temp_credit_rating = 3 }
	econ_initialize_credit_rating_system = yes

	## Manpower boost so they don't start with 0
	add_manpower = 30000
}


#Stuff to alleviate Germania's GDP being nuked back to burgundian level
calculate_GCW_Debt_save = {
	set_variable = {GCW_debt_save = -1}
	subtract_from_variable = {GCW_debt_save = credit_rating_effect_on_debt_GDP_effect}
}

GER_GCW_begin = {
	log = "[GetDateText]: [This.GetName]: GER_GCW_begin; Executing"

	country_event = { id = gcw_dbg.20 days = 500 }




	## Ownership & Cores Getting set up
	# Speer
	every_owned_state = {
		limit = { is_SGR_state = yes }
		#set_demilitarized_zone = no
		SGR = {
			add_state_core = PREV
			transfer_state = PREV
		}
	}
	SGR = {
		add_to_array = { global.GCW_contenders = THIS }
		GER_GCW_econ_setup = yes
		inherit_technology = PREV
		load_oob = SGR
		setup_speer_gcw_navy = yes
		set_war_support = GER.GER_Speer_Influence
		set_variable = { GCW_legitimacy = GER.GER_Speer_Influence }
		GCW_intialise_legitimacy = yes
		if = {
			limit = {
				has_game_rule = { rule = GER_CIVIL_WAR_BUFF option = GER_CIVIL_WAR_BUFF_SPEER }
			}
			add_ideas = Custom_TNO_war_buff
			add_equipment_to_stockpile = {
				type = infantry_equipment
				amount = 50000
				producer = GER
			}
		}

		#econtype
		set_variable = { TNO_economy_type = 2 }
		set_variable = { TNO_economy_subtype = 5 }

		if = {
			limit = {
				check_variable = { GER.GCW_Speer_infantry_weapons > 0 }
			}
			add_equipment_to_stockpile = {
				type = infantry_equipment
				amount = GER.GCW_Speer_infantry_weapons
				producer = GER
			}
		}
		if = {
			limit = {
				check_variable = { GER.GCW_Speer_heer_units > 0 }
			}
			hidden_effect = {
				capital_scope = {
					create_unit = {
						division = "division_template = \"Infanterie-Division\" start_experience_factor = 0.1 start_equipment_factor = 0.3"
						owner = PREV
						count =  GER.GCW_Speer_heer_units
					}
				}
			}
		}
		if = {
			limit = { GER = { has_variable = GCW_Speer_prod_units } }
			set_temp_variable = { pus_temp = GER.GCW_Speer_prod_units }
			econ_pus_change = yes
			clear_variable = GER.GCW_Speer_prod_units
		}
		if = {
			limit = { GER = { has_country_flag = speer_for_germany } }
			change_tag_from = GER
			SGR = { add_ideas = GER_hitlers_chosen_successor }
		}
	}

	# Göring
	every_owned_state = {
		limit = { is_GGR_state = yes }
		#set_demilitarized_zone = no
		GGR = {
			add_state_core = PREV
			transfer_state = PREV
		}
	}
	GGR = {
		add_to_array = { global.GCW_contenders = THIS }
		GER_GCW_econ_setup = yes
		inherit_technology = PREV
		load_oob = GGR
		setup_goering_gcw_navy = yes
		set_war_support = GER.GER_Goring_Influence
		set_variable = { GCW_legitimacy = GER.GER_Goring_Influence }
		GCW_intialise_legitimacy = yes
		if = {
			limit = {
				has_game_rule = { rule = GER_CIVIL_WAR_BUFF option = GER_CIVIL_WAR_BUFF_GORING }
			}
			add_ideas = Custom_TNO_war_buff
			add_equipment_to_stockpile = {
				type = infantry_equipment
				amount = 50000
				producer = GER
			}
		}

		#econtype
		set_variable = { TNO_economy_type = 2 }
		set_variable = { TNO_economy_subtype = 5 }

		country_event = { id = goering_successor.14 days = 6  }
		country_event = { id = goering_successor.12 days = 10 }
		country_event = { id = goering_successor.11 days = 5  }
		country_event = { id = goering_successor.10 days = 12 }

		if = {
			limit = {
				check_variable = { GER.GCW_Goring_infantry_weapons > 0 }
			}
			add_equipment_to_stockpile = {
				type = infantry_equipment
				amount = GER.GCW_Goring_infantry_weapons
				producer = GER
			}
		}
		if = {
			limit = {
				check_variable = { GER.GCW_Goring_heer_units > 0 }
			}
			hidden_effect = {
				capital_scope = {
					create_unit = {
						division = "division_template = \"Infanterie-Division\" start_experience_factor = 0.1 start_equipment_factor = 0.3"
						owner = PREV
						count =  GER.GCW_Goring_heer_units
					}
				}
			}
		}
		if = {
			limit = { GER = { has_variable = GCW_Goring_prod_units } }
			set_temp_variable = { pus_temp = GER.GCW_Goring_prod_units }
			econ_pus_change = yes
			clear_variable = GER.GCW_Goring_prod_units
		}
		if = {
			limit = { GER = { has_country_flag = goring_for_germany } }
			change_tag_from = GER
			GGR = { add_ideas = GER_hitlers_chosen_successor }
		}
	}

	# Bormann
	every_owned_state = {
		limit = { is_BGR_state = yes }
		#set_demilitarized_zone = no
		BGR = {
			add_state_core = PREV
			transfer_state = PREV
		}
	}
	BGR = {
		add_to_array = { global.GCW_contenders = THIS }
		GER_GCW_econ_setup = yes
		inherit_technology = PREV
		load_oob = BGR
		set_war_support = GER.GER_Bormann_Influence
		set_variable = { GCW_legitimacy = GER.GER_Bormann_Influence }
		GCW_intialise_legitimacy = yes

		#econtype
		set_variable = { TNO_economy_type = 2 }
		set_variable = { TNO_economy_subtype = 5 }

		if = {
			limit = {
				check_variable = { GER.GCW_Bormann_infantry_weapons > 0 }
			}
			add_equipment_to_stockpile = {
				type = infantry_equipment
				amount = GER.GCW_Bormann_infantry_weapons
				producer = GER
			}
		}
		if = {
			limit = {
				has_game_rule = { rule = GER_CIVIL_WAR_BUFF option = GER_CIVIL_WAR_BUFF_BORMANN }
			}
			add_ideas = Custom_TNO_war_buff
			add_equipment_to_stockpile = {
				type = infantry_equipment
				amount = 50000
				producer = GER
			}
		}
		if = {
			limit = {
				check_variable = { GER.GCW_Bormann_heer_units > 0 }
			}
			hidden_effect = {
				capital_scope = {
					create_unit = {
						division = "division_template = \"Infanterie-Division\" start_experience_factor = 0.1 start_equipment_factor = 0.3"
						owner = PREV
						count =  GER.GCW_Bormann_heer_units
					}
				}
			}
		}
		if = {
			limit = { GER = { has_variable = GCW_Bormann_prod_units } }
			set_temp_variable = { pus_temp = GER.GCW_Bormann_prod_units }
			econ_pus_change = yes
			clear_variable = GER.GCW_Bormann_prod_units
		}
		if = {
			limit = { GER = { has_country_flag = bormann_for_germany } }
			change_tag_from = GER
			BGR = { add_ideas = GER_hitlers_chosen_successor }
		}
	}

	# Heydrich
	every_owned_state = {
		limit = { is_HGR_state = yes }
		#set_demilitarized_zone = no
		HGR = {
			add_state_core = PREV
			transfer_state = PREV
		}
	}
	HGR = {
		if = {
			limit = { country_exists = HGR } #The above state transfer already checks if Heydrich is indisposed or not

			add_to_array = { global.GCW_contenders = THIS }
			GER_GCW_econ_setup = yes
			inherit_technology = PREV
			load_oob = HGR
			setup_heydrich_gcw_navy = yes
			set_war_support = GER.GER_Heydrich_Influence
			set_variable = { GCW_legitimacy = GER.GER_Heydrich_Influence }
			GCW_intialise_legitimacy = yes
			if = {
				limit = {
					has_game_rule = { rule = GER_CIVIL_WAR_BUFF option = GER_CIVIL_WAR_BUFF_HEYDRICH }
				}
				add_ideas = Custom_TNO_war_buff
				load_oob = HGR
				load_oob = HGR
				add_equipment_to_stockpile = {
					type = infantry_equipment
					amount = 50000
					producer = GER
				}
			}

			#econtype
			set_variable = { TNO_economy_type = 3 }
			set_variable = { TNO_economy_subtype = 7 }

			if = {
				limit = {
					check_variable = { GER.GCW_Heydrich_infantry_weapons > 0 }
				}
				add_equipment_to_stockpile = {
					type = infantry_equipment
					amount = GER.GCW_Heydrich_infantry_weapons
					producer = GER
				}
			}
			if = {
				limit = {
					check_variable = { GER.GCW_Heydrich_heer_units > 0 }
				}
				hidden_effect = {
					capital_scope = {
						create_unit = {
							division = "division_template = \"Schutzstaffel-Infanterie\" start_experience_factor = 0.1 start_equipment_factor = 0.3"
							owner = PREV
							count =  GER.GCW_Heydrich_heer_units
						}
					}
				}
			}
			if = {
				limit = { GER = { has_variable = GCW_Heydrich_prod_units } }
				set_temp_variable = { pus_temp = GER.GCW_Heydrich_prod_units }
				econ_pus_change = yes
				clear_variable = GER.GCW_Heydrich_prod_units
			}
			if = {
				limit = { GER = { has_country_flag = heydrich_for_germany } }
				change_tag_from = GER
				HGR = { add_ideas = GER_hitlers_chosen_successor }
			}
			if = {
				limit = { GER = { has_country_flag = HGR_burgundian_reinforcements } }
				28 = {
					create_unit = {
						division = "name = \"Burgundische Panzer-Division\" division_template = \"Burgundische Panzer-Division\" start_experience_factor = 0.3"
						owner = HGR
					}
				}
				28 = {
					create_unit = {
						division = "name = \"Burgundische Panzer-Division\" division_template = \"Burgundische Panzer-Division\" start_experience_factor = 0.3"
						owner = HGR
					}
				}
			}

			every_country = {
				limit = {
					NOT = { has_government = esoteric_nazism }
				}
				HGR = { set_embargo_PREV = yes }
			}
		}
	}

	## Spawn Bohemia
	remove_state_core = 9
	remove_state_core = 75
	CZE = {
		transfer_state = 9
		transfer_state = 75
		inherit_technology = PREV
		load_oob = "CZE_1962"
		TNO_startup_nation = yes
		country_event = { id = reich.800 days = 18 }
	}

	## War Declaration, ideas & focus tree loading

	## Divide equipment
	# 20% to boreman
	send_equipment_fraction = {
		target = BGR
		value = 0.2
	}
	# 20% to spet
	send_equipment_fraction = {
		target = SGR
		value = 0.25
	}
	# 30% to goring
	send_equipment_fraction = {
		target = GGR
		value = 0.5
	}
	# 10% to heydrich
	send_equipment_fraction = {
		target = HGR
		value = 0.33
	}
	# 10% goes bye bye keep 10%
	send_equipment_fraction = {
		target = ZZZ
		value = 0.5
	}

	#Ditch the pre-CW ideas
	remove_ideas = {
		to_banish_want
		the_two_principles
		endsieg
		gone_over
		man_on_the_moon
	}
	BGR = {
		declare_war_on = { target = GGR type = civil_war }
		add_ideas = GER_BGR_civil_war_offense
		load_focus_tree = tno_bormann_civil_war
	}

	GGR = {
		add_ideas = GER_GGR_civil_war_offense
		load_focus_tree = GGR_civil_war
	}

	SGR = {
		declare_war_on = { target = BGR type = civil_war }
		declare_war_on = { target = GGR type = civil_war }
		add_ideas = GER_SGR_civil_war_offense
		load_focus_tree = tno_speer_civil_war
	}
	HGR = {
		if = {
			limit = { country_exists = THIS }
			declare_war_on = { target = BGR type = civil_war }
			declare_war_on = { target = GGR type = civil_war }
			declare_war_on = { target = SGR type = civil_war }
			add_ideas = GER_HGR_civil_war_offense
			load_focus_tree = HGR_civil_war
		}
	}

	## Remove Speer/Heydrich from leading the Fash/BurgSys party
	kill_ideology_leader = fascism
	kill_ideology_leader = esoteric_nazism

	## Remove legitimacy decisions
	clr_country_flag = GER_power_struggle

	## Set up global flag
	set_global_flag = german_civil_war

	## No more super :(
	remove_superpower = yes

	## Downgrade credit rating
	econ_lower_credit_rating = yes
	econ_lower_credit_rating = yes
	econ_lower_credit_rating = yes

	## Just to ensure Speidel doesn't get into a fiscal crisis
	add_ideas = GCW_hidden_credit_buff
	add_ideas = GCW_state_value_buff

	BGR = { add_ideas = GCW_state_value_buff }
	SGR = { add_ideas = GCW_state_value_buff }
	GGR = { add_ideas = GCW_state_value_buff }
	HGR = { add_ideas = GCW_state_value_buff }
	GER = {
		calculate_GCW_Debt_save = yes
		add_dynamic_modifier = {
			modifier = GER_Debt_stalling
			scope = GER
		}
		set_temp_variable = { temp_credit_rating_min = 8 }
		set_temp_variable = { temp_credit_rating_max = 8 }
		econ_set_min_credit_rating = yes
		econ_set_max_credit_rating = yes
	}

	## News Event Time
	every_country = {
		news_event = WORLD.5
	}

	#Winter olympics success
	CAN = {
		news_event = { id = WORLD.18218 days = 100 }
	}

	log = "[GetDateText]: [This.GetName]: GER_GCW_begin; Completed execution."
}

## GCW Conclusion Effects
GER_GCW_conclude = {
	log = "[GetDateText]: [This.GetName]: GER_GCW_conclude; Executing"
	custom_effect_tooltip = GER_fix_your_shit_pdx

	country_event = {
		id = reich_shared.23
		days = 31
	}

	# Just in case
	BGR = { remove_ideas = Anti_Heydrich_Pact clr_country_flag = BRG_fall_ragnarchar_allowed }
	SGR = { remove_ideas = Anti_Heydrich_Pact }
	GGR = { remove_ideas = Anti_Heydrich_Pact }
	remove_ideas = GCW_hidden_credit_buff
	remove_ideas = GCW_state_value_buff

	hidden_effect = {
		##Conclude
		GER = {
			remove_dynamic_modifier = {
				modifier = GER_Debt_stalling
			}
			#Flag Stuff
			clr_global_flag = german_civil_war
			set_global_flag = german_civil_war_end
			clr_global_flag = GCW_Speidel_Refused_Victor
			clr_global_flag = GCW_Speidel_Active
			clr_country_flag = GER_bormann_breaks_away
			clr_country_flag = GER_goring_breaks_away
			clr_country_flag = GER_speer_breaks_away
			clr_country_flag = GER_goring_breaks_away
			clr_country_flag = speidel_in_charge
			clr_country_flag = GER_Speidel_Militarist_Leader

			#General
			PREV = { transfer_navy = { target = GER } }
			kill_country_leader = yes
			inherit_technology = PREV
			drop_cosmetic_tag = yes
			set_political_power = 200

			#Specific
			if = {
				limit = { PREV = { tag = BGR } }
				# clear GCW buffs
				BGR = {
					remove_ideas = {
						GCW_hidden_debuff_1
						GCW_hidden_debuff_2
						GCW_hidden_debuff_3
						GCW_hidden_holy_shit_win_already
					}
				}

				log = "[GetDateText]: [Prev.GetName]: GER_GCW_conclude; Bormann Victory"
				set_global_flag = german_civil_war_bormannvic
				GER_GCW_conclude_bormann = yes

				country_event = { id = reich.559 days = 7 } # Heydrich dead event
				#country_event = { id = CA_Bormann.1 days = 1800 random_days = 30 }
			}
			else_if = {
				limit = { PREV = { tag = GGR } }
				# clear GCW buffs
				GGR = {
					remove_ideas = {
						GCW_hidden_debuff_1
						GCW_hidden_debuff_2
						GCW_hidden_debuff_3
						GCW_hidden_holy_shit_win_already
					}
				}

				log = "[GetDateText]: [Prev.GetName]: GER_GCW_conclude; Goering Victory"
				set_global_flag = german_civil_war_goeringvic
				GER_GCW_conclude_goering = yes

				country_event = { id = reich.559 days = 7 } # Heydrich dead event
			}
			else_if = {
				limit = { PREV = { tag = SGR } }
				# clear GCW buffs
				SGR = {
					remove_ideas = {
						GCW_hidden_debuff_1
						GCW_hidden_debuff_2
						GCW_hidden_debuff_3
						GCW_hidden_holy_shit_win_already
					}
				}

				log = "[GetDateText]: [Prev.GetName]: GER_GCW_conclude; Speer Victory"
				set_global_flag = german_civil_war_speervic
				GER_GCW_conclude_speer = yes

				#country_event = { id = CA_Speer.1 days = 1800 random_days = 30 }
				country_event = { id = reich.559 days = 7 } # Heydrich dead event
			}
			else_if = {
				limit = { PREV = { tag = HGR } }
				# clear GCW buffs
				HGR = {
					remove_ideas = {
						GCW_hidden_debuff_1
						GCW_hidden_debuff_2
						GCW_hidden_debuff_3
						GCW_hidden_holy_shit_win_already
					}
				}

				every_unit_leader = {
					limit = { has_id = 70 }
					set_nationality = ZZZ
				}

				log = "[GetDateText]: [Prev.GetName]: GER_GCW_conclude; Heydrich Victory"
				set_global_flag = german_civil_war_heydrichvic
				GER_GCW_conclude_heydrich = yes
			}
			else = {
				log = "[GetDateText]: [Prev.GetName]: GER_GCW_conclude; Unexpected Victory"
			}

			#Recreate the Pakt
			create_faction = Einheitspakt

			# Great Game continued
			if = {
				limit = {
					has_global_flag = GreatGame_game_1_GER_victory
					OR = {
						has_global_flag = german_civil_war_bormannvic
						has_global_flag = german_civil_war_speervic
					}
				}
				GER = { add_to_faction = BUL }
				BUL = {
					add_ideas = Pakt_Bundnispartner
					if = {
						limit = { has_global_flag = german_civil_war_speervic }
						join_zollverein = yes
					}
				}
			}

			#GDP Stuff (to clarify w/ later GCW work)
			set_variable = { GDP_growth = 0.001 }

			#World Stuff
			PostGCW_Tension_Changes = yes

			#Closing
			annex_country = { target = PREV transfer_troops = yes }

			#Remove GCW Cores
			every_owned_state = {
				remove_core_of = GGR
				remove_core_of = BGR
				remove_core_of = SGR
				remove_core_of = HGR
				remove_core_of = RNW
			}

			#Extremely lazy soluttion to Speidel being an economic genius
			multiply_variable = { money_reserves = 0.0 } #already converted to billion

			delete_unit_template_and_units = { division_template = "Bürgerwehr" }

			#Himmler shenanigans
			BRG = { TNO_BRG_domestic_tree_swap = yes }

			#Rommel retires again
			every_unit_leader = {
				limit = { has_id = 72 }
				retire = yes
			}

			#Add XP
			army_experience = 100
			air_experience = 100
			navy_experience = 20

			if = {
				limit = { NOT = { has_country_flag = heydrich_for_germany } }
				#Re-adding Observer ideas
				PER = { add_ideas = Pakt_Observer }
				# CYL = { add_ideas = Pakt_Observer }
			}

			#Super again :)
			set_superpower = yes

			#Fix SAW score
			if = {
				limit = {
					has_country_flag = SAW_early_end
				}
				if = {
					limit = { has_global_flag = SAF_OFN_Victory }
					set_temp_variable = { Victory_ID = 4 }
					set_temp_variable = { Victory_Outcome = 1 }
					set_temp_variable = { Victory_Points = -300 }
					Cold_War_GUI_ManipulateVictory = yes
				}
				else_if = {
					limit = { has_global_flag = SAF_OFN_Ceasefire }
					set_temp_variable = { Victory_ID = 4 }
					set_temp_variable = { Victory_Outcome = 2 }
					set_temp_variable = { Victory_Points = -150 }
					Cold_War_GUI_ManipulateVictory = yes
				}
				else_if = {
					limit = { has_global_flag = SAF_Stalemate }
					set_temp_variable = { Victory_ID = 4 }
					set_temp_variable = { Victory_Outcome = 3 }
					Cold_War_GUI_ManipulateVictory = yes
				}
				else_if = {
					limit = { has_global_flag = SAF_Schild_Ceasefire }
					set_temp_variable = { Victory_ID = 4 }
					set_temp_variable = { Victory_Outcome = 4 }
					set_temp_variable = { Victory_Points = 150 }
					Cold_War_GUI_ManipulateVictory = yes
				}
				else_if = {
					limit = { has_global_flag = SAF_Schild_Victory }
					set_temp_variable = { Victory_ID = 4 }
					set_temp_variable = { Victory_Outcome = 5 }
					set_temp_variable = { Victory_Points = 300 }
					Cold_War_GUI_ManipulateVictory = yes
				}
			}

			#Puppet Bohemia
			CZE = {
				if = {
					limit = {
						exists = yes
						has_country_flag = GER_CZE_joined_gcw
					}
					save_party_popularities = yes
					GER = {
						set_autonomy = {
							target = CZE
							autonomy_state = autonomy_reichsprotektorat
						}
					}
					apply_party_popularities = yes
				}
			}

			# German Madagascar Returns
			if = {
				limit = {
					country_exists = MDG
					MDG = { has_war = no }
					NOT = {
						has_global_flag = german_civil_war_speervic
						has_global_flag = german_civil_war_goeringvic
						has_global_flag = german_civil_war_heydrichvic
					}
				}
				add_to_faction = MDG
				clr_global_flag = madagaskar_civil_war
				if = {
					limit = { has_global_flag = german_civil_war_speervic }
					country_event = {
						id = MADAGASKAR.13
						days = 160
					}
				}
				transfer_state = 706
				transfer_state = 707
				MDG = {
					add_ideas = Pakt_Autonomous_Reichskommissariat
					econ_join_sphere_GER = yes
					apply_party_popularities = yes
				}
			}
			else_if = {
				limit = {
					country_exists = MDG
					MDG = {
						has_war = yes
					}
					OR = {
						has_global_flag = german_civil_war_speervic
						has_global_flag = german_civil_war_bormannvic
					}
				}
				set_country_flag = GER_MaCW_overdue
			}

			#Transfer player tag (has to be done last, anything coded after this won't work properly)
			if = { limit = { PREV = { is_ai = no } } change_tag_from = PREV }
		}
	}


	log = "[GetDateText]: [This.GetName]: GER_GCW_conclude; Completed execution."
}

GER_GCW_conclude_bormann = {
	log = "[GetDateText]: [This.GetName]: GER_GCW_conclude_bormann; Executing."

	## Ideas
	add_ideas = {
		#Spirits


		#Ministers
		GER_Baldur_von_Schirach_hog
		GER_Wilhelm_Burgdorf_sec
		GER_Walther_Hewel_for
		GER_Kurt_Lange_eco
	}

	## Politics
	create_country_leader = {
		name = "Martin Bormann"
		desc = "POLITICS_MARTIN_BORMANN_DESC"
		picture = "Portrait_Germany_Martin_Bormann.dds"
		expire = "1990.1.1"
		ideology = national_socialism_subtype
		traits = {
			dictator
		}
	}
	create_country_leader = {
		name = "Hans Speidel"
		desc = "POLITICS_HANS_SPEIDEL_DESC"
		picture = "Portrait_Germany_Hans_Speidel.dds"
		expire = "1999.1.1"
		ideology = despotism_military_junta_subtype
	}
	create_country_leader = {
		name = "Hans Filbinger"
		expire = "1999.1.1"
		ideology = authoritarian_democracy_subtype
	}
	create_country_leader = {
		name = "Eugen Gerstenmaier"
		expire = "1999.1.1"
		ideology = conservative_democracy_subtype
	}

	# Political Popularity & Ruling Party
	set_politics = { ruling_party = national_socialism }
	set_popularities = {
		communist = 0
		socialist = 0
		social_democracy = 0
		liberal_democracy = 0

		conservative_democracy = 2
		authoritarian_democracy = 4
		despotism = 0
		fascism = 18
		national_socialism = 60
		ultranationalism = 16

	}

	# Party Names
	set_party_name = {
		ideology = national_socialism
		long_name = BGR_national_socialism_party_long
		name = BGR_national_socialism_party
	}
	set_party_name = {
		ideology = fascism
		long_name = BGR_fascism_party_long
		name = BGR_fascism_party
	}
	set_party_name = {
		ideology = authoritarian_democracy
		long_name = BGR_authoritarian_democracy_party_long
		name = BGR_authoritarian_democracy_party
	}
	set_party_name = {
		ideology = conservative_democracy
		long_name = BGR_conservative_democracy_party_long
		name = BGR_conservative_democracy_party
	}
	set_party_name = {
		ideology = liberal_democracy
		long_name = BGR_liberal_democracy_party_long
		name = BGR_liberal_democracy_party
	}
	set_party_name = {
		ideology = social_democracy
		long_name = BGR_social_democracy_party_long
		name = BGR_social_democracy_party
	}
	set_party_name = {
		ideology = socialist
		long_name = BGR_socialist_party_long
		name = BGR_socialist_party
	}
	set_party_name = {
		ideology = communist
		long_name = BGR_communist_party_long
		name = BGR_communist_party
	}
	set_party_name = {
		ideology = ultranationalism
		long_name = BGR_ultranationalism_party_long
		name = BGR_ultranationalism_party
	}

	## Content Setup
	set_country_flag = BOR_Phase1
	load_focus_tree = {
		tree = GER_bormann_post_cw_tree
		keep_completed = no
	}

	GER = {
		##Variable Initiation
		set_variable = { GDP = 234.634 } #in billions
		set_variable = { GDP_growth = 2.5 }
		set_variable = { base_inflation_rate = 2.4 }
		set_variable = { poverty_rate = 44.12 }
		set_variable = { poverty_monthly_change = -0.08 }
		set_variable = { money_reserves = 0.0 } #in billions
		set_variable = { national_debt = 229.08 } #in billions
		set_variable = { interest_rates = 3.0 }
		set_variable = { misc_income = 12.8 }
		set_variable = { misc_costs = 0.0 }

		initiate_display_vars = yes
	}

	## Unit Leaders
	BGR = {
		every_unit_leader = {
			limit = { is_BGR_unit_leader = yes }
			set_nationality = GER
		}
	}

	if = { #Collaboids Faction Mechanic
		limit = {
			ENG = {
				has_country_flag = ENG_ready_for_faction_mech
			}
		}
		ENG = {
			country_event = {
				id = ENG_International_Mechanic.1
				days = 40
			}
		}
	}

	## Event
	country_event = { id = bormann.1 days = 3 }

	## Kaukasus oil
	if = {
		limit = { CAU = { has_country_flag = CAU_policy_business_bormann } }
		give_resource_rights = { receiver = GER state = 229 }
		give_resource_rights = { receiver = GER state = 1552 }
		give_resource_rights = { receiver = GER state = 1553 }
		give_resource_rights = { receiver = GER state = 1554 }
	}

	## Great Game things
	country_event = { id = GG_startup.3 days = 60 } # Hungary Great Game
	country_event = { id = GG_startup.4 days = 420 } # Romania Great Game
	country_event = { id = GG_startup.5 days = 780 } # France Great Game
	country_event = { id = GG_startup.6 days = 1140 } # Serbia Great Game

	ITA = {
		country_event = { id = GG_startup.3 days = 60 } # Hungary Great Game
		country_event = { id = GG_startup.4 days = 420 } # Romania Great Game
		country_event = { id = GG_startup.5 days = 780 } # France Great Game
		country_event = { id = GG_startup.6 days = 1140 } # Serbia Great Game
	}

	## Load navy
	setup_bormann_gcw_navy = yes

	## Starter natspirits
	add_ideas = {
		GER_BOR_political_rodeo_idea
		GER_BOR_shellshocked_wehrmacht_idea
		GER_BOR_the_reich_in_thousand_pieces_1_idea
		GER_BOR_lost_generation_1_idea
	}

	## Ireland Rejoining the Pakt
	IRE = { country_event = { id = IRE_eco_collapse.15 days = 100 } }

	log = "[GetDateText]: [This.GetName]: GER_GCW_conclude_bormann; Completed execution."
}

GER_GCW_conclude_goering = {
	log = "[GetDateText]: [This.GetName]: GER_GCW_conclude_goering; Executing."

	## Ideas
	add_ideas = {
		#Spirits
		GER_GOR_lingering_traitors
		rebuilding_germany

		#Ministers
		GGR_Wilhelm_Stuckart_hog
		GER_Ferdinand_Schorner_sec
		GGR_Artur_Axmann_for
		GGR_Paul_Korner_eco
	}

	## Politics
	create_country_leader = {
		name = "Hermann Göring"
		desc = "POLITICS_HERMANN_GORING_DESC"
		picture = "Portrait_Germany_Hermann_Goring.dds"
		expire = "1990.1.1"
		ideology = national_socialism_stratocratic_nazism_subtype
		traits = {
			dictator
			uncle_of_the_reich
		}
	}

	# Political Popularity & Ruling Party
	set_politics = { ruling_party = national_socialism }
	set_popularities = {
		national_socialism = 65
		ultranationalism = 35
	}

	# Party Names

	## Content Setup
	load_focus_tree = {
		tree = GER_goering_main
		keep_completed = no
	}

	# Events
	country_event = { id = goering.13 days = 5 }
	country_event = { id = goering.500 days = 365 }

	# Militarist GUI
	set_country_flag = GER_Schorner_Militarist_Leader
	set_variable = { GER_Militarist_Influence = 50 }
	set_variable = { GER_Militarist_Loyalty = 50 }
	set_variable = { GER_Militarist_Power = 80 }

	# Etc
	set_country_flag = GER_civil_war_victors
	set_country_flag = GER_domestic_unrest

	## Unit Leaders
	GGR = {
		every_unit_leader = {
			limit = { is_GGR_unit_leader = yes }
			set_nationality = GER
		}
	}

	## Event
	country_event = { id = goering.2 days = 3 }
	country_event = { id = goering.1703 days = 4}
	country_event = { id = goering.1704 days = 6 }
	country_event = { id = goering.1705 days = 12 }
	country_event = { id = goering.1706 days = 15 }
	country_event = { id = goering.1707 days = 20 }

	## Kaukasus oil
	if = {
		limit = { CAU = { has_country_flag = CAU_policy_business_goering } }
		give_resource_rights = { receiver = GER state = 229 }
		give_resource_rights = { receiver = GER state = 1552 }
		give_resource_rights = { receiver = GER state = 1553 }
		give_resource_rights = { receiver = GER state = 1554 }
	}

	## Ireland Rejoining the Pakt
	IRE = { country_event = { id = IRE_eco_collapse.15 days = 100 } }

	GER = {

		##Variable Initiation
		set_variable = { GDP = 234.634 } #in billions
		set_variable = { GDP_growth = 2.5 }
		set_variable = { base_inflation_rate = 2.4 }
		set_variable = { poverty_rate = 44.12 }
		set_variable = { poverty_monthly_change = -0.08 }
		set_variable = { money_reserves = 0.0 } #in billions
		set_variable = { national_debt = 229.08 } #in billions
		set_variable = { interest_rates = 3.0 }
		set_variable = { misc_income = 12.8 }
		set_variable = { misc_costs = 0.0 }

		initiate_display_vars = yes

		### Political
		set_variable = { tno_political_parties_effectiveness = 85 }
		set_variable = { tno_religious_rights_effectiveness = 79 }
		set_variable = { tno_trade_unions_effectiveness = 92 }
		set_variable = { tno_immigration_effectiveness = 40 }
		set_variable = { tno_slavery_effectiveness = 90 }
		set_variable = { tno_public_meetings_effectiveness = 84 }
		set_variable = { tno_press_rights_effectiveness = 81 }
		set_variable = { tno_vote_franchise_effectiveness = 51 }
		set_variable = { tno_refugees_effectiveness = 46 }

		### Economic
		set_variable = { tno_trade_laws_effectiveness = 36 }
		set_variable = { tno_income_taxation_effectiveness = 91 }
		set_variable = { tno_minimum_wage_effectiveness = 47 }
		set_variable = { tno_max_workhours_effectiveness = 62 }
		set_variable = { tno_child_labor_effectiveness = 63 }
		set_variable = { tno_pensions_effectiveness = 48 }
		set_variable = { tno_unemployment_effectiveness = 52 }

		### Social
		set_variable = { tno_safety_effectiveness = 53 }
		set_variable = { tno_health_care_effectiveness = 47 }
		set_variable = { tno_pollution_effectiveness = 66 }
		set_variable = { tno_education_effectiveness = 52 }
		set_variable = { tno_penal_system_effectiveness = 85 }
		set_variable = { tno_lgbt_rights_effectiveness = 95 }
		set_variable = { tno_gender_rights_effectiveness = 72 }
		set_variable = { tno_minorities_effectiveness = 61 }
		set_variable = { tno_security_effectiveness = 81 }

		### Military
		set_variable = { tno_conscription_effectiveness = 85 }
		set_variable = { tno_women_effectiveness = 80 }
		set_variable = { tno_military_supervision_effectiveness = 43 }
		set_variable = { tno_training_effectiveness = 52 }
		set_variable = { tno_racial_integration_effectiveness = 100 }
		set_variable = { tno_draft_exemptions_effectiveness = 90 }
	}

	log = "[GetDateText]: [This.GetName]: GER_GCW_conclude_goering; Completed execution."
}

GER_GCW_conclude_speer = {
	log = "[GetDateText]: [This.GetName]: GER_GCW_conclude_speer; Executing."

	## Ideas
	add_ideas = {
		#Spirits
		GER_SGR_the_lost_generation
		GER_SGR_wary_wehrmacht
		GER_SGR_gang_of_four

		#Ministers
		GER_Kurt_Georg_Kiesinger_hog
		GER_Helmut_Schmidt_for
		GER_Ludwig_Erhard_eco
		GER_Henning_von_Tresckow_sec
	}
	swap_ideas = {
		remove_idea = tno_religious_rights_state_religion
		add_idea = tno_religious_rights_secularism
	}

	## Politics
	create_country_leader = {
		name = "Albert Speer"
		desc = "POLITICS_SPEER_GERMANY_DESC"
		picture = "Portrait_Germany_Albert_Speer.dds"
		expire = "1990.1.1"
		ideology = fascism_reformed_national_socialism_subtype
		traits = {
			dictator
		}
	}

	# Political Popularity & Ruling Party
	set_politics = { ruling_party = fascism }
	set_popularities = {
		communist = 0
		socialist = 1
		social_democracy = 1
		liberal_democracy = 1

		conservative_democracy = 0
		authoritarian_democracy = 12
		despotism = 0
		fascism = 45
		national_socialism = 40
		ultranationalism = 0

	}

	# Party Names
	set_party_name = {
		ideology = national_socialism
		long_name = SGR_national_socialism_party_long
		name = SGR_national_socialism_party
	}
	set_party_name = {
		ideology = fascism
		long_name = SGR_fascism_party_long
		name = SGR_fascism_party
	}
	set_party_name = {
		ideology = authoritarian_democracy
		long_name = SGR_authoritarian_democracy_party_long
		name = SGR_authoritarian_democracy_party
	}
	set_party_name = {
		ideology = social_democracy
		long_name = SGR_social_democracy_party_long
		name = SGR_social_democracy_party
	}
	set_party_name = {
		ideology = liberal_democracy
		long_name = SGR_liberal_democracy_party_long
		name = SGR_liberal_democracy_party
	}
	set_party_name = {
		ideology = socialist
		long_name = SGR_socialist_party_long
		name = SGR_socialist_party
	}
	set_party_name = {
		ideology = communist
		long_name = SGR_communist_party_long
		name = SGR_communist_party
	}

	#Political Leaders
	#UNBEKANNT - AuthSoc
	create_country_leader = {
		name = "UNBEKANNT"
		desc = ""
		picture = "Portrait_Germany_Albert_Speer.dds"
		expire = "1990.1.1"
		ideology = communist_subtype
		traits = { }
	}
	#UNBEKANNT - LibSoc
	create_country_leader = {
		name = "UNBEKANNT"
		desc = ""
		picture = "Portrait_Germany_Albert_Speer.dds"
		expire = "1990.1.1"
		ideology = socialist_subtype
		traits = { }
	}
	#UNBEKANNT - SocDem
	create_country_leader = {
		name = "UNBEKANNT"
		desc = ""
		picture = "Portrait_Germany_Unbekannt.dds"
		expire = "1990.1.1"
		ideology = social_democracy_subtype
		traits = { }
	}
	#Various Leaders - SocLib
	create_country_leader = {
		name = "Various leaders"
		desc = ""
		picture = "Portrait_Germany_Albert_Speer.dds"
		expire = "1990.1.1"
		ideology = liberal_democracy_subtype
		traits = { }
	}
	#Helmut Schmidt - AuthDem
	create_country_leader = {
		name = "Helmut Schmidt"
		desc = "POLITICS_SPEER_GERMANY_DESC"
		picture = "Portrait_Germany_Helmut_Schmidt.dds"
		expire = "1990.1.1"
		ideology = authoritarian_democracy_oligarchy_subtype
		traits = { }
	}
	#Theodor Oberländer - NatSoc
	create_country_leader = {
		name = "Theodor Oberländer"
		desc = "POLITICS_SPEER_GERMANY_DESC"
		picture = "Portrait_Germany_Theodor_Oberlander.dds"
		expire = "1990.1.1"
		ideology = national_socialism_idiosyncratic_nazism_subtype
		traits = {
		}
	}

	##Content Setup
	load_focus_tree = {
		tree = GER_speer_post_cw_tree
		keep_completed = no
	}

	#Speer Mechanics Init
	initialize_state_of_the_reich = yes
	initialize_speer_arrays = yes
	add_to_array = {ZV_members = THIS}

	## Unit Leaders
	SGR = {
		every_unit_leader = {
			limit = { is_SGR_unit_leader = yes }
			set_nationality = GER
		}
	}

	## Policy Effectiveness

	GER = {
		### Political
		set_variable = { tno_political_parties_effectiveness = 73 }
		set_variable = { tno_religious_rights_effectiveness = 79 }
		set_variable = { tno_trade_unions_effectiveness = 92 }
		set_variable = { tno_immigration_effectiveness = 40 }
		set_variable = { tno_slavery_effectiveness = 82 }
		set_variable = { tno_public_meetings_effectiveness = 84 }
		set_variable = { tno_press_rights_effectiveness = 81 }
		set_variable = { tno_vote_franchise_effectiveness = 51 }
		set_variable = { tno_refugees_effectiveness = 46 }

		### Economic
		set_variable = { tno_trade_laws_effectiveness = 36 }
		set_variable = { tno_income_taxation_effectiveness = 91 }
		set_variable = { tno_minimum_wage_effectiveness = 47 }
		set_variable = { tno_max_workhours_effectiveness = 62 }
		set_variable = { tno_child_labor_effectiveness = 63 }
		set_variable = { tno_pensions_effectiveness = 48 }
		set_variable = { tno_unemployment_effectiveness = 52 }

		### Social
		set_variable = { tno_safety_effectiveness = 53 }
		set_variable = { tno_health_care_effectiveness = 47 }
		set_variable = { tno_pollution_effectiveness = 66 }
		set_variable = { tno_education_effectiveness = 52 }
		set_variable = { tno_penal_system_effectiveness = 85 }
		set_variable = { tno_lgbt_rights_effectiveness = 95 }
		set_variable = { tno_gender_rights_effectiveness = 72 }
		set_variable = { tno_minorities_effectiveness = 61 }
		set_variable = { tno_security_effectiveness = 81 }

		### Military
		set_variable = { tno_conscription_effectiveness = 85 }
		set_variable = { tno_women_effectiveness = 80 }
		set_variable = { tno_military_supervision_effectiveness = 43 }
		set_variable = { tno_training_effectiveness = 52 }
		set_variable = { tno_racial_integration_effectiveness = 100 }
		set_variable = { tno_draft_exemptions_effectiveness = 57 }

		set_variable = { income_tax_rate = 0.45 }
		set_variable = { business_tax_rate = 0.83 }
		set_variable = { economic_centralization = 80 }
		hidden_effect = {
			set_temp_variable = { inflation_temp = 1.5 }
			econ_inflation_change = yes
			add_to_variable = { poverty_rate = 4 }
		}
	}

	## Event
	country_event = { id = speer.1 days = 3 }
	country_event = speer.10000

	if = { #Collaboids Faction Mechanic
		limit = {
			ENG = {
				has_country_flag = ENG_ready_for_faction_mech
			}
		}
		ENG = {
			country_event = {
				id = ENG_International_Mechanic.1
				days = 40
			}
		}
	}


	## Balance things
	set_stability = 0.5

	## For the AI to be able to use the RND gui
	if = {
		limit = { SGR = { is_ai = yes } }
		set_country_flag = RND_Tech_Window_Open
	}
	GER = {
		set_country_flag = gui_alert_visible
		set_country_flag = GER_Economy_GUI_notif
	}

	set_temp_variable = { temp_credit_rating = 7 }
	set_temp_variable = { temp_credit_rating_min = 7 }
	set_temp_variable = { temp_credit_rating_max = 9 }

	econ_initialize_credit_rating_system = yes
	## Great Game things
	country_event = { id = GG_startup.3 days = 60 } # Hungary Great Game
	country_event = { id = GG_startup.4 days = 420 } # Romania Great Game
	country_event = { id = GG_startup.5 days = 780 } # France Great Game
	country_event = { id = GG_startup.6 days = 1140 } # Serbia Great Game

	ITA = {
		country_event = { id = GG_startup.3 days = 60 } # Hungary Great Game
		country_event = { id = GG_startup.4 days = 420 } # Romania Great Game
		country_event = { id = GG_startup.5 days = 780 } # France Great Game
		country_event = { id = GG_startup.6 days = 1140 } # Serbia Great Game
	}

	## Ireland Rejoining the Pakt
	IRE = { country_event = { id = IRE_eco_collapse.15 days = 100 } }

	log = "[GetDateText]: [This.GetName]: GER_GCW_conclude_speer; Completed execution."
}

GER_GCW_conclude_heydrich = {
	log = "[GetDateText]: [This.GetName]: GER_GCW_conclude_heydrich; Executing."

	clr_country_flag = country_has_gui
	## Ideas
	add_ideas = {
		#Spirits


		#Ministers
		GER_Philipp_Bouhler_hog
		GER_Herbert_Otto_Gille_sec
		GER_Gunter_dAlquen_for
		GER_August_Frank_eco
	}

	## Politics
	create_country_leader = {
		name = "Reinhard Heydrich"
		desc = "POLITICS_REINHARD_HEYDRICH_DESC"
		picture = "Portrait_Germany_Reinhard_Heydrich.dds"
		expire = "1999.1.1"
		ideology = esoteric_nazism_spartanism_subtype
		traits = {
			dictator
		}
	}

	#econtype
	set_variable = { TNO_economy_type = 3 }
	set_variable = { TNO_economy_subtype = 7 }

	# Political Popularity & Ruling Party
	set_politics = { ruling_party = esoteric_nazism }
	set_popularities = {
		communist = 0
		socialist = 0
		social_democracy = 0
		liberal_democracy = 0

		conservative_democracy = 0
		authoritarian_democracy = 0
		despotism = 0
		fascism = 0
		national_socialism = 23
		ultranationalism = 0
		esoteric_nazism = 77
	}

	# Party Names

	## Content Setup

	## Unit Leaders
	#Remove Speidelist Unit Leaders
	remove_unit_leader = 70
	remove_unit_leader = 72
	remove_unit_leader = 96
	remove_unit_leader = 101
	remove_unit_leader = 106
	remove_unit_leader = 108
	remove_unit_leader = 110
	remove_unit_leader = 113
	remove_unit_leader = 116
	remove_unit_leader = 117
	remove_unit_leader = 128
	remove_unit_leader = 129
	remove_unit_leader = 147
	remove_unit_leader = 148
	remove_unit_leader = 149

	#Heydrichite Leaders
	HGR = {
		every_unit_leader = {
			limit = { is_HGR_unit_leader = yes }
			set_nationality = GER
		}
	}

	GER = { # annex bohemia into germany
		if = {
			limit = {
				has_country_flag = GER_CZE_secured_heydrich
			}
		}
		annex_country = {
			target = CZE
			transfer_troops = yes
		}
	}

	## Event
	country_event = { id = HGR.99 days = 1 }

	log = "[GetDateText]: [This.GetName]: GER_GCW_conclude_heydrich; Completed execution."
}

## Post GCW Tension Changes
PostGCW_Tension_Changes = {
	log = "[GetDateText]: [Root.GetName]: PostGCW_Tension_Changes; Executing."

	#Bormann
	#if = {
	#	limit = { has_global_flag = german_civil_war_bormannvic }
	#	add_named_threat = { threat = -50 name = threat.47.t }
	#}
	#Göring
	#else_if = {
	#	limit = { has_global_flag = german_civil_war_goeringvic }
	#	add_named_threat = { threat = -45 name = threat.48.t }
	#}
	#Speer
	#else_if = {
	#	limit = { has_global_flag = german_civil_war_speervic }
	#	add_named_threat = { threat = -55 name = threat.46.t }
	#}
	#Heydrich
	#else_if = {
	#	limit = { has_global_flag = german_civil_war_heydrichvic }
	#	add_named_threat = { threat = 100 name = threat.49.t } #fix
	#}
	#RNW
	#else_if = {
	#	limit = { has_global_flag = GCW_RNW_Victory }
	#	add_named_threat = { threat = 100 name = threat.51.t } #fix
	#}

	log = "[GetDateText]: [Root.GetName]: PostGCW_Tension_Changes; Completed execution."
}

## GCW Contenders Managing Effects (Used in TNO_peace_on_actions.txt)
GER_GCW_check_victor = {
	log = "[GetDateText]: [This.GetName]: GER_GCW_check_victor; Executing."

	if = {
		limit = { check_variable = { global.GCW_contenders^num = 1 } }
		#Cleanup space

		#Conclude
		if = {
			limit = { NOT = { has_global_flag = GCW_Speidel_Active } }
			GER = { country_event = { id = reich.30 } }
		}
		else = {
			#Fix up later, *will* cause issues
			clear_array = global.GCW_contenders
			GER_GCW_conclude = yes
		}
		log = "[GetDateText]: [This.GetName]: GER_GCW_check_victor;"
	}

	log = "[GetDateText]: [This.GetName]: GER_GCW_check_victor; Completed execution."
}

GER_GCW_off_a_fucker = {
	log = "[GetDateText]: [This.GetName]: GER_GCW_off_a_fucker; Executing."

	# funny workaround
	if = {
		limit = { has_global_flag = anti_heydrich_pact_formed }
		# speer dies
		if = {
			limit = {
				ROOT = { tag = SGR }
			}
			SGR = { dismantle_faction = yes }
			if = {
				limit = { country_exists = BGR }
				# bormann and goering left
				if = {
					limit = { country_exists = GGR }
					BGR = { create_faction = anti_heydrich_pact_faction }
					BGR = { add_to_faction = GGR }
				}
				# bormann left
				else = {
					clr_global_flag = anti_heydrich_pact_formed
				}
			}
			# goering left
			else = {
				clr_global_flag = anti_heydrich_pact_formed
			}
		}
		# bormann dies goering left or goering dies bormann left
		else_if = {
			limit = {
				OR = {
					ROOT = { tag = BGR }
					ROOT = { tag = GGR }
				}
				NOT = { country_exists = SGR }
			}
			BGR = { dismantle_faction = yes }
			clr_global_flag = anti_heydrich_pact_formed
		}
	}

	# anti-heydrich pact clean up
	if = {
		limit = {
			ROOT = { tag = HGR }
			has_global_flag = anti_heydrich_pact_formed
		}
		clr_global_flag = anti_heydrich_pact_formed
		if = {
			limit = { country_exists = SGR }
			SGR = { dismantle_faction = yes }
			if = {
				limit = { country_exists = BGR }
				BGR = {
					declare_war_on = { target = SGR type = civil_war }
				}
			}
			if = {
				limit = { country_exists = GGR }
				if = {
					limit = { country_exists = BGR }
					GGR = {
						declare_war_on = { target = BGR type = civil_war }
					}
				}
				GGR = {
					declare_war_on = { target = SGR type = civil_war }
				}
			}
		}
		else_if = {
			limit = { country_exists = BGR }
			BGR = { dismantle_faction = yes }
			if = {
				limit = { country_exists = BGR }
				GGR = {
					declare_war_on = { target = BGR type = civil_war }
				}
			}
		}
	}

	remove_from_array = { global.GCW_contenders = THIS }

	# clear GCW buffs
	remove_dynamic_modifier = { modifier = GCW_legitimacy_dynamic_modifier }
	remove_ideas = {
		GCW_hidden_debuff_1
		GCW_hidden_debuff_2
		GCW_hidden_debuff_3
	}

	log = "[GetDateText]: [This.GetName]: GER_GCW_off_a_fucker; Completed execution."
}

### Other Stuff ###
## Militarist Monthly Changes (used for Pre-GCW & Göring)
GER_militarist_monthly_changes = {
	# PRE GCW
	if = {
		limit = { has_country_flag = GER_expanded_draft }
		GGR_increase_militarist_power_small = yes
	}
	if = {
		limit = { has_country_flag = GER_overextended_airforce }
		GGR_decrease_militarist_power_small = yes
	}
	if = {
		limit = { has_country_flag = GER_faith_in_the_fuhrer }
		GGR_increase_militarist_loyalty_large = yes
	}
	if = {
		limit = { has_country_flag = GER_rampant_factionalism }
		GGR_decrease_militarist_influence_small = yes
		GGR_decrease_militarist_power_small = yes
		GGR_decrease_militarist_loyalty_small = yes
	}
	if = {
		limit = { has_country_flag = GER_supported_the_navy }
		GGR_increase_militarist_loyalty_small = yes
		GGR_increase_militarist_power_small = yes
		GGR_increase_militarist_influence_small = yes
	}
	if = {
		limit = { has_country_flag = GER_acted_against_SS }
		GGR_increase_militarist_loyalty_small = yes
		GGR_increase_militarist_influence_small = yes
	}
	if = {
		limit = { has_country_flag = GER_reduced_heer_budget }
		GGR_decrease_militarist_influence_small = yes
		GGR_decrease_militarist_power_small = yes
		GGR_decrease_militarist_loyalty_small = yes
	}
}

## South African War Withdrawal #
GER_withdraw_from_SAW = {
	clr_country_flag = GER_entered_sa_war
	hidden_effect = { recall_volunteers_from = SAF }
	if = {
		limit = { has_global_flag = german_civil_war_speervic }
		custom_effect_tooltip = SGR_SAW_withdraw
		reload_GER_speer_post_cw_tree = yes
	}
}

GER_apply_embargos = {
	hidden_effect = {
		#OFN Embargos
		USA = { set_embargo_PREV = yes }
		CAN = { set_embargo_PREV = yes }
		AST = { set_embargo_PREV = yes }
		GUY = { set_embargo_PREV = yes }
		NZL = { set_embargo_PREV = yes }
		ICE = { set_embargo_PREV = yes }
		WIN = { set_embargo_PREV = yes }
		BLZ = { set_embargo_PREV = yes }

		#CPS Embargos
		JAP = { set_embargo_PREV = yes }
		CHI = { set_embargo_PREV = yes }
		PHI = { set_embargo_PREV = yes }
		INS = { set_embargo_PREV = yes }
		BUR = { set_embargo_PREV = yes }
		THA = { set_embargo_PREV = yes }
		CAM = { set_embargo_PREV = yes }
		LAO = { set_embargo_PREV = yes }
		VIN = { set_embargo_PREV = yes }
		SHO = { set_embargo_PREV = yes }
		GAN = { set_embargo_PREV = yes }
		GUX = { set_embargo_PREV = yes }
		MAN = { set_embargo_PREV = yes }
		SIC = { set_embargo_PREV = yes }
		GUZ = { set_embargo_PREV = yes }
		SHX = { set_embargo_PREV = yes }
		AZH = { set_embargo_PREV = yes }
		GNG = { set_embargo_PREV = yes }
		YUN = { set_embargo_PREV = yes }
		BHU = { set_embargo_PREV = yes }
	}
}

GER_drop_embargos = {
	hidden_effect = {
		#Drop OFN Embargos
		USA = { clear_embargo_PREV = yes }
		CAN = { clear_embargo_PREV = yes }
		AST = { clear_embargo_PREV = yes }
		GUY = { clear_embargo_PREV = yes }
		NZL = { clear_embargo_PREV = yes }
		ICE = { clear_embargo_PREV = yes }
		WIN = { clear_embargo_PREV = yes }
		BLZ = { clear_embargo_PREV = yes }

		#Drop CPS Embargos
		JAP = { clear_embargo_PREV = yes }
		CHI = { clear_embargo_PREV = yes }
		PHI = { clear_embargo_PREV = yes }
		INS = { clear_embargo_PREV = yes }
		BUR = { clear_embargo_PREV = yes }
		THA = { clear_embargo_PREV = yes }
		CAM = { clear_embargo_PREV = yes }
		LAO = { clear_embargo_PREV = yes }
		VIN = { clear_embargo_PREV = yes }
		SHO = { clear_embargo_PREV = yes }
		GAN = { clear_embargo_PREV = yes }
		GUX = { clear_embargo_PREV = yes }
		MAN = { clear_embargo_PREV = yes }
		SIC = { clear_embargo_PREV = yes }
		GUZ = { clear_embargo_PREV = yes }
		SHX = { clear_embargo_PREV = yes }
		AZH = { clear_embargo_PREV = yes }
		GNG = { clear_embargo_PREV = yes }
		YUN = { clear_embargo_PREV = yes }
		BHU = { clear_embargo_PREV = yes }
	}
}

GER_hitler_advance = {
	GER = {
		if = {
			limit = { has_country_flag = GER_Hitler_Stage1 }
			clr_country_flag = GER_Hitler_Stage1
			set_country_flag = GER_Hitler_Stage2
		}
		else_if = {
			limit = { has_country_flag = GER_Hitler_Stage2 }
			clr_country_flag = GER_Hitler_Stage2
			set_country_flag = GER_Hitler_Stage3
		}
		else_if = {
			limit = { has_country_flag = GER_Hitler_Stage3 }
			clr_country_flag = GER_Hitler_Stage3
			set_country_flag = GER_Hitler_Stage4
		}
		else_if = {
			limit = { has_country_flag = GER_Hitler_Stage4 }
			clr_country_flag = GER_Hitler_Stage4
			set_country_flag = GER_Hitler_Stage5
		}
		else_if = {
			limit = { has_country_flag = GER_Hitler_Stage5 }
			clr_country_flag = GER_Hitler_Stage5
			set_country_flag = GER_Hitler_Stage6
		}
		else_if = {
			limit = { has_country_flag = GER_Hitler_Stage6 }
			clr_country_flag = GER_Hitler_Stage6
			set_country_flag = GER_Hitler_Stage7
			if = {
				limit = { is_ai = yes }
				set_variable = { GER_bohemia_cost = 150 }
			}
		}
		else_if = {
			limit = { has_country_flag = GER_Hitler_Stage7 }
			clr_country_flag = GER_Hitler_Stage7
			set_country_flag = GER_Hitler_Stage8
		}
	}
}

GCW_build_up_prod_units = {
	custom_effect_tooltip = GCW_build_up_prod_units_tt
	if = {
		limit = {
			OR = {
				AND = {
					has_country_flag = bormann_for_germany
					check_variable = { ai_check_temp = 0 }
				}
				AND = {
					has_country_flag = ai_bormann_build_up
					check_variable = { ai_check_temp = 1 }
				}
			}
		}
		add_to_variable = { GCW_Bormann_prod_units = 1 }
		if = {
			limit = {
				has_country_flag = ai_bormann_build_up
				check_variable = { GER_Bormann_Influence > GER_Bormann_Influence_limit }
			}
			activate_mission = GER_GCW_bormann_build_up
		}
		else = {
			clr_country_flag = ai_bormann_build_up
		}
	}
	else_if = {
		limit = {
			OR = {
				AND = {
					has_country_flag = goring_for_germany
					check_variable = { ai_check_temp = 0 }
				}
				AND = {
					has_country_flag = ai_goring_build_up
					check_variable = { ai_check_temp = 1 }
				}
			}
		}
		add_to_variable = { GCW_Goring_prod_units = 1 }
		if = {
			limit = {
				has_country_flag = ai_goring_build_up
				check_variable = { GER_Goring_Influence > GER_Goring_Influence_limit }
			}
			activate_mission = GER_GCW_goring_build_up
		}
		else = {
			clr_country_flag = ai_goring_build_up
		}
	}
	else_if = {
		limit = {
			OR = {
				AND = {
					has_country_flag = speer_for_germany
					check_variable = { ai_check_temp = 0 }
				}
				AND = {
					has_country_flag = ai_speer_build_up
					check_variable = { ai_check_temp = 1 }
				}
			}
		}
		add_to_variable = { GCW_Speer_prod_units = 1 }
		if = {
			limit = {
				has_country_flag = ai_speer_build_up
				check_variable = { GER_Speer_Influence > GER_Speer_Influence_limit }
			}
			activate_mission = GER_GCW_speer_build_up
		}
		else = {
			clr_country_flag = ai_speer_build_up
		}
	}
	else_if = {
		limit = {
			OR = {
				AND = {
					has_country_flag = heydrich_for_germany
					check_variable = { ai_check_temp = 0 }
				}
				AND = {
					has_country_flag = ai_heydrich_build_up
					check_variable = { ai_check_temp = 1 }
				}
			}
		}
		add_to_variable = { GCW_Heydrich_prod_units = 1 }
		if = {
			limit = {
				has_country_flag = ai_heydrich_build_up
				check_variable = { GER_Heydrich_Influence > GER_Heydrich_Influence_limit }
			}
			activate_mission = GER_GCW_heydrich_build_up
		}
		else = {
			clr_country_flag = ai_heydrich_build_up
		}
	}
}

GCW_build_up_forts = {
	custom_effect_tooltip = GCW_build_up_forts_tt
	if = {
		limit = {
			OR = {
				AND = {
					has_country_flag = bormann_for_germany
					check_variable = { ai_check_temp = 0 }
				}
				AND = {
					has_country_flag = ai_bormann_build_up
					check_variable = { ai_check_temp = 1 }
				}
			}
		}
		60 = {
			add_building_construction = {
				type = bunker
				level = 2
				province = 425
				instant_build = yes
			}
			add_building_construction = {
				type = bunker
				level = 1
				province = 6582
				instant_build = yes
			}
		}
		65 = {
			add_building_construction = {
				type = bunker
				level = 1
				province = 11545
				instant_build = yes
			}
			add_building_construction = {
				type = bunker
				level = 1
				province = 11481
				instant_build = yes
			}
			add_building_construction = {
				type = bunker
				level = 1
				province = 514
				instant_build = yes
			}
			add_building_construction = {
				type = bunker
				level = 1
				province = 6559
				instant_build = yes
			}
			add_building_construction = {
				type = bunker
				level = 1
				province = 11432
				instant_build = yes
			}
		}
		set_country_flag = GCW_bormann_forts_done
		if = {
			limit = {
				has_country_flag = ai_bormann_build_up
				check_variable = { GER_Bormann_Influence > GER_Bormann_Influence_limit }
			}
			activate_mission = GER_GCW_bormann_build_up
		}
		else = {
			clr_country_flag = ai_bormann_build_up
		}
	}
	else_if = {
		limit = {
			OR = {
				AND = {
					has_country_flag = goring_for_germany
					check_variable = { ai_check_temp = 0 }
				}
				AND = {
					has_country_flag = ai_goring_build_up
					check_variable = { ai_check_temp = 1 }
				}
			}
		}
		188 = {
			add_building_construction = {
				type = bunker
				level = 2
				province = 9238
				instant_build = yes
			}
			add_building_construction = {
				type = bunker
				level = 1
				province = 6218
				instant_build = yes
			}
			add_building_construction = {
				type = bunker
				level = 1
				province = 6263
				instant_build = yes
			}
			add_building_construction = {
				type = bunker
				level = 1
				province = 3271
				instant_build = yes
			}
			add_building_construction = {
				type = bunker
				level = 2
				province = 3326
				instant_build = yes
			}
			add_building_construction = {
				type = bunker
				level = 1
				province = 6377
				instant_build = yes
			}
		}
		set_country_flag = GCW_goring_forts_done
		if = {
			limit = {
				has_country_flag = ai_goring_build_up
				check_variable = { GER_Goring_Influence > GER_Goring_Influence_limit }
			}
			activate_mission = GER_GCW_goring_build_up
		}
		else = {
			clr_country_flag = ai_goring_build_up
		}
	}
	else_if = {
		limit = {
			OR = {
				AND = {
					has_country_flag = speer_for_germany
					check_variable = { ai_check_temp = 0 }
				}
				AND = {
					has_country_flag = ai_speer_build_up
					check_variable = { ai_check_temp = 1 }
				}
			}
		}
		55 = {
			add_building_construction = {
				type = bunker
				level = 2
				province = 3574
				instant_build = yes
			}
			add_building_construction = {
				type = bunker
				level = 1
				province = 589
				instant_build = yes
			}
			add_building_construction = {
				type = bunker
				level = 2
				province = 6488
				instant_build = yes
			}
			add_building_construction = {
				type = bunker
				level = 1
				province = 6444
				instant_build = yes
			}
		}
		57 = {
			add_building_construction = {
				type = bunker
				level = 1
				province = 529
				instant_build = yes
			}
		}
		51 = {
			add_building_construction = {
				type = bunker
				level = 1
				province = 3547
				instant_build = yes
			}
			add_building_construction = {
				type = bunker
				level = 1
				province = 3488
				instant_build = yes
			}
		}
		set_country_flag = GCW_speer_forts_done
		if = {
			limit = {
				has_country_flag = ai_speer_build_up
				check_variable = { GER_Speer_Influence > GER_Speer_Influence_limit }
			}
			activate_mission = GER_GCW_speer_build_up
		}
		else = {
			clr_country_flag = ai_speer_build_up
		}
	}
	else_if = {
		limit = {
			OR = {
				AND = {
					has_country_flag = heydrich_for_germany
					check_variable = { ai_check_temp = 0 }
				}
				AND = {
					has_country_flag = ai_heydrich_build_up
					check_variable = { ai_check_temp = 1 }
				}
			}
		}
		42 = {
			add_building_construction = {
				type = bunker
				level = 2
				province = 11560
				instant_build = yes
			}
			add_building_construction = {
				type = bunker
				level = 1
				province = 3558
				instant_build = yes
			}
		}
		28 = {
			add_building_construction = {
				type = bunker
				level = 1
				province = 549
				instant_build = yes
			}
			add_building_construction = {
				type = bunker
				level = 2
				province = 9503
				instant_build = yes
			}
			add_building_construction = {
				type = bunker
				level = 1
				province = 6529
				instant_build = yes
			}
			add_building_construction = {
				type = bunker
				level = 2
				province = 678
				instant_build = yes
			}
		}
		set_country_flag = GCW_heydrich_forts_done
		if = {
			limit = {
				has_country_flag = ai_heydrich_build_up
				check_variable = { GER_Heydrich_Influence > GER_Heydrich_Influence_limit }
			}
			activate_mission = GER_GCW_heydrich_build_up
		}
		else = {
			clr_country_flag = ai_heydrich_build_up
		}
	}
}

GCW_build_up_infantry_weapons = {
	custom_effect_tooltip = GCW_build_up_infantry_weapons_tt
	if = {
		limit = {
			OR = {
				AND = {
					has_country_flag = bormann_for_germany
					check_variable = { ai_check_temp = 0 }
				}
				AND = {
					has_country_flag = ai_bormann_build_up
					check_variable = { ai_check_temp = 1 }
				}
			}
		}
		add_to_variable = { GCW_Bormann_infantry_weapons = 5000 }
		if = {
			limit = {
				has_country_flag = ai_bormann_build_up
				check_variable = { GER_Bormann_Influence > GER_Bormann_Influence_limit }
			}
			activate_mission = GER_GCW_bormann_build_up
		}
		else = {
			clr_country_flag = ai_bormann_build_up
		}
	}
	else_if = {
		limit = {
			OR = {
				AND = {
					has_country_flag = goring_for_germany
					check_variable = { ai_check_temp = 0 }
				}
				AND = {
					has_country_flag = ai_goring_build_up
					check_variable = { ai_check_temp = 1 }
				}
			}
		}
		add_to_variable = { GCW_Goring_infantry_weapons = 5000 }
		if = {
			limit = {
				has_country_flag = ai_goring_build_up
				check_variable = { GER_Goring_Influence > GER_Goring_Influence_limit }
			}
			activate_mission = GER_GCW_goring_build_up
		}
		else = {
			clr_country_flag = ai_goring_build_up
		}
	}
	else_if = {
		limit = {
			OR = {
				AND = {
					has_country_flag = speer_for_germany
					check_variable = { ai_check_temp = 0 }
				}
				AND = {
					has_country_flag = ai_speer_build_up
					check_variable = { ai_check_temp = 1 }
				}
			}
		}
		add_to_variable = { GCW_Speer_infantry_weapons = 5000 }
		if = {
			limit = {
				has_country_flag = ai_speer_build_up
				check_variable = { GER_Speer_Influence > GER_Speer_Influence_limit }
			}
			activate_mission = GER_GCW_speer_build_up
		}
		else = {
			clr_country_flag = ai_speer_build_up
		}
	}
	else_if = {
		limit = {
			OR = {
				AND = {
					has_country_flag = heydrich_for_germany
					check_variable = { ai_check_temp = 0 }
				}
				AND = {
					has_country_flag = ai_heydrich_build_up
					check_variable = { ai_check_temp = 1 }
				}
			}
		}
		add_to_variable = { GCW_Heydrich_infantry_weapons = 5000 }
		if = {
			limit = {
				has_country_flag = ai_heydrich_build_up
				check_variable = { GER_Heydrich_Influence > GER_Heydrich_Influence_limit }
			}
			activate_mission = GER_GCW_heydrich_build_up
		}
		else = {
			clr_country_flag = ai_heydrich_build_up
		}
	}
}

GCW_build_up_heer_units = {
	custom_effect_tooltip = GCW_build_up_heer_units_tt
	if = {
		limit = {
			OR = {
				AND = {
					has_country_flag = bormann_for_germany
					check_variable = { ai_check_temp = 0 }
				}
				AND = {
					has_country_flag = ai_bormann_build_up
					check_variable = { ai_check_temp = 1 }
				}
			}
		}
		add_to_variable = { GCW_Bormann_heer_units = 2 }
		if = {
			limit = {
				has_country_flag = ai_bormann_build_up
				check_variable = { GER_Bormann_Influence > GER_Bormann_Influence_limit }
			}
			activate_mission = GER_GCW_bormann_build_up
		}
		else = {
			clr_country_flag = ai_bormann_build_up
		}
	}
	else_if = {
		limit = {
			OR = {
				AND = {
					has_country_flag = goring_for_germany
					check_variable = { ai_check_temp = 0 }
				}
				AND = {
					has_country_flag = ai_goring_build_up
					check_variable = { ai_check_temp = 1 }
				}
			}
		}
		add_to_variable = { GCW_Goring_heer_units = 2 }
		if = {
			limit = {
				has_country_flag = ai_goring_build_up
				check_variable = { GER_Goring_Influence > GER_Goring_Influence_limit }
			}
			activate_mission = GER_GCW_goring_build_up
		}
		else = {
			clr_country_flag = ai_goring_build_up
		}
	}
	else_if = {
		limit = {
			OR = {
				AND = {
					has_country_flag = speer_for_germany
					check_variable = { ai_check_temp = 0 }
				}
				AND = {
					has_country_flag = ai_speer_build_up
					check_variable = { ai_check_temp = 1 }
				}
			}
		}
		add_to_variable = { GCW_Speer_heer_units = 2 }
		if = {
			limit = {
				has_country_flag = ai_speer_build_up
				check_variable = { GER_Speer_Influence > GER_Speer_Influence_limit }
			}
			activate_mission = GER_GCW_speer_build_up
		}
		else = {
			clr_country_flag = ai_speer_build_up
		}
	}
	else_if = {
		limit = {
			OR = {
				AND = {
					has_country_flag = heydrich_for_germany
					check_variable = { ai_check_temp = 0 }
				}
				AND = {
					has_country_flag = ai_heydrich_build_up
					check_variable = { ai_check_temp = 1 }
				}
			}
		}
		add_to_variable = { GCW_Heydrich_heer_units = 2 }
		if = {
			limit = {
				has_country_flag = ai_heydrich_build_up
				check_variable = { GER_Heydrich_Influence > GER_Heydrich_Influence_limit }
			}
			activate_mission = GER_GCW_heydrich_build_up
		}
		else = {
			clr_country_flag = ai_heydrich_build_up
		}
	}
}

GER_increase_legitimacy_small = {
	if = {
		limit = {
			has_country_flag = bormann_for_germany
		}
		GER_increase_legitimacy_small_bormann = yes
	}
	else_if = {
		limit = {
			has_country_flag = goring_for_germany
		}
		GER_increase_legitimacy_small_goring = yes
	}
	else_if = {
		limit = {
			has_country_flag = speer_for_germany
		}
		GER_increase_legitimacy_small_speer = yes
	}
	else_if = {
		limit = {
			has_country_flag = heydrich_for_germany
		}
		GER_increase_legitimacy_small_heydrich = yes
	}
}

GER_increase_legitimacy_large = {
	if = {
		limit = {
			has_country_flag = bormann_for_germany
		}
		GER_increase_legitimacy_large_bormann = yes
	}
	else_if = {
		limit = {
			has_country_flag = goring_for_germany
		}
		GER_increase_legitimacy_large_goring = yes
	}
	else_if = {
		limit = {
			has_country_flag = speer_for_germany
		}
		GER_increase_legitimacy_large_speer = yes
	}
	else_if = {
		limit = {
			has_country_flag = heydrich_for_germany
		}
		GER_increase_legitimacy_large_heydrich = yes
	}
}

GER_increase_legitimacy_small_bormann = {
	custom_effect_tooltip = GER_increase_legitimacy_small_bormann_tt
	add_to_variable = { GER_Bormann_Influence = 5 }
}
GER_increase_legitimacy_small_goring = {
	custom_effect_tooltip = GER_increase_legitimacy_small_goring_tt
	add_to_variable = { GER_Goring_Influence = 5 }
}
GER_decrease_legitimacy_small_goring = {
	custom_effect_tooltip = GER_decrease_legitimacy_small_goring_tt
	add_to_variable = { GER_Goring_Influence = -5 }
}
GER_increase_legitimacy_small_speer = {
	custom_effect_tooltip = GER_increase_legitimacy_small_speer_tt
	add_to_variable = { GER_Speer_Influence = 5 }
}
GER_increase_legitimacy_small_heydrich = {
	custom_effect_tooltip = GER_increase_legitimacy_small_heydrich_tt
	add_to_variable = { GER_Heydrich_Influence = 5 }
}

GER_increase_legitimacy_large_bormann = {
	custom_effect_tooltip = GER_increase_legitimacy_large_bormann_tt
	add_to_variable = { GER_Bormann_Influence = 10 }
}
GER_increase_legitimacy_large_goring = {
	custom_effect_tooltip = GER_increase_legitimacy_large_goring_tt
	add_to_variable = { GER_Goring_Influence = 10 }
}
GER_decrease_legitimacy_large_goring = {
	custom_effect_tooltip = GER_decrease_legitimacy_large_goring_tt
	add_to_variable = { GER_Goring_Influence = -10 }
}
GER_increase_legitimacy_large_speer = {
	custom_effect_tooltip = GER_increase_legitimacy_large_speer_tt
	add_to_variable = { GER_Speer_Influence = 10 }
}
GER_increase_legitimacy_large_heydrich = {
	custom_effect_tooltip = GER_increase_legitimacy_large_heydrich_tt
	add_to_variable = { GER_Heydrich_Influence = 10 }
}

GER_decrease_legitimacy_small_bormann = {
	custom_effect_tooltip = GER_decrease_legitimacy_small_bormann_tt
	add_to_variable = { GER_Bormann_Influence = -5 }
}
GER_decrease_legitimacy_small_speer = {
	custom_effect_tooltip = GER_decrease_legitimacy_small_speer_tt
	add_to_variable = { GER_Speer_Influence = -5 }
}
GER_decrease_legitimacy_small_heydrich = {
	custom_effect_tooltip = GER_decrease_legitimacy_small_heydrich_tt
	add_to_variable = { GER_Heydrich_Influence = -5 }
}

GER_decrease_legitimacy_large_bormann = {
	custom_effect_tooltip = GER_decrease_legitimacy_large_bormann_tt
	add_to_variable = { GER_Bormann_Influence = -10 }
}

GER_decrease_legitimacy_large_speer = {
	custom_effect_tooltip = GER_increase_legitimacy_large_speer_tt
	add_to_variable = { GER_Speer_Influence = -10 }
}
GER_decrease_legitimacy_large_heydrich = {
	custom_effect_tooltip = GER_increase_legitimacy_large_heydrich_tt
	add_to_variable = { GER_Heydrich_Influence = -10 }
}

GCW_intialise_legitimacy = {
	set_country_flag = GER_GCW_mechanic_flag
	set_temp_variable = { GCW_temp_legitimacy = GCW_legitimacy }
	divide_temp_variable = { GCW_temp_legitimacy = -200 }
	add_to_temp_variable = { GCW_temp_legitimacy = 0.4 }
	set_variable = { GCW_legitimacy_training_time_factor = GCW_temp_legitimacy }
	multiply_temp_variable = { GCW_temp_legitimacy = -1 }
	set_variable = { GCW_legitimacy_production_factory_max_efficiency_factor = GCW_temp_legitimacy }
	add_to_temp_variable = { GCW_temp_legitimacy = 0.1 }
	set_variable = { GCW_legitimacy_planning_speed = GCW_temp_legitimacy }
	add_to_temp_variable = { GCW_temp_legitimacy = 0.05 }
	set_variable = { GCW_legitimacy_political_power_factor = GCW_temp_legitimacy }
	add_to_temp_variable = { GCW_temp_legitimacy = 0.25 }
	divide_temp_variable = { GCW_temp_legitimacy = 2 }
	set_variable = { GCW_legitimacy_compliance_gain = GCW_temp_legitimacy }
	add_dynamic_modifier = { modifier = GCW_legitimacy_dynamic_modifier }
}

GCW_increase_legitimacy_small = {
	custom_effect_tooltip = GCW_increase_legitimacy_small_tt
	add_to_variable = { GCW_legitimacy = 5 }
	clamp_variable = { var = GCW_legitimacy min = 0 max = 100 }
	add_to_variable = { GCW_legitimacy_training_time_factor = -0.05 }
	clamp_variable = { var = GCW_legitimacy_training_time_factor min = -0.1 max = 0.4 }
	add_to_variable = { GCW_legitimacy_production_factory_max_efficiency_factor = 0.05 }
	clamp_variable = { var = GCW_legitimacy_production_factory_max_efficiency_factor min = -0.4 max = 0.1 }
	add_to_variable = { GCW_legitimacy_planning_speed = 0.05 }
	clamp_variable = { var = GCW_legitimacy_planning_speed min = -0.3 max = 0.2 }
	add_to_variable = { GCW_legitimacy_political_power_factor = 0.05 }
	clamp_variable = { var = GCW_legitimacy_political_power_factor min = -0.25 max = 0.25 }
	add_to_variable = { GCW_legitimacy_compliance_gain = 0.0125 }
	clamp_variable = { var = GCW_legitimacy_compliance_gain min = 0 max = 0.25 }
}
GCW_increase_legitimacy_large = {
	custom_effect_tooltip = GCW_increase_legitimacy_large_tt
	add_to_variable = { GCW_legitimacy = 10 }
	clamp_variable = { var = GCW_legitimacy min = 0 max = 100 }
	add_to_variable = { GCW_legitimacy_training_time_factor = -0.10 }
	clamp_variable = { var = GCW_legitimacy_training_time_factor min = -0.1 max = 0.4 }
	add_to_variable = { GCW_legitimacy_production_factory_max_efficiency_factor = 0.10 }
	clamp_variable = { var = GCW_legitimacy_production_factory_max_efficiency_factor min = -0.4 max = 0.1 }
	add_to_variable = { GCW_legitimacy_planning_speed = 0.10 }
	clamp_variable = { var = GCW_legitimacy_planning_speed min = -0.3 max = 0.2 }
	add_to_variable = { GCW_legitimacy_political_power_factor = 0.10 }
	clamp_variable = { var = GCW_legitimacy_political_power_factor min = -0.25 max = 0.25 }
	add_to_variable = { GCW_legitimacy_compliance_gain = 0.025 }
	clamp_variable = { var = GCW_legitimacy_compliance_gain min = 0 max = 0.25 }
}
GCW_decrease_legitimacy_small = {
	custom_effect_tooltip = GCW_decrease_legitimacy_small_tt
	subtract_from_variable = { GCW_legitimacy = 5 }
	clamp_variable = { var = GCW_legitimacy min = 0 max = 100 }
	subtract_from_variable = { GCW_legitimacy_training_time_factor = -0.05 }
	clamp_variable = { var = GCW_legitimacy_training_time_factor min = -0.1 max = 0.4 }
	subtract_from_variable = { GCW_legitimacy_production_factory_max_efficiency_factor = 0.05 }
	clamp_variable = { var = GCW_legitimacy_production_factory_max_efficiency_factor min = -0.4 max = 0.1 }
	subtract_from_variable = { GCW_legitimacy_planning_speed = 0.05 }
	clamp_variable = { var = GCW_legitimacy_planning_speed min = -0.3 max = 0.2 }
	subtract_from_variable = { GCW_legitimacy_political_power_factor = 0.05 }
	clamp_variable = { var = GCW_legitimacy_political_power_factor min = -0.25 max = 0.25 }
	add_to_variable = { GCW_legitimacy_compliance_gain = -0.0125 }
	clamp_variable = { var = GCW_legitimacy_compliance_gain min = 0 max = 0.25 }
}
GCW_decrease_legitimacy_large = {
	custom_effect_tooltip = GCW_decrease_legitimacy_large_tt
	subtract_from_variable = { GCW_legitimacy = 10 }
	clamp_variable = { var = GCW_legitimacy min = 0 max = 100 }
	subtract_from_variable = { GCW_legitimacy_training_time_factor = -0.10 }
	clamp_variable = { var = GCW_legitimacy_training_time_factor min = -0.1 max = 0.4 }
	subtract_from_variable = { GCW_legitimacy_production_factory_max_efficiency_factor = 0.10 }
	clamp_variable = { var = GCW_legitimacy_production_factory_max_efficiency_factor min = -0.4 max = 0.1 }
	subtract_from_variable = { GCW_legitimacy_planning_speed = 0.10 }
	clamp_variable = { var = GCW_legitimacy_planning_speed min = -0.3 max = 0.2 }
	subtract_from_variable = { GCW_legitimacy_political_power_factor = 0.10 }
	clamp_variable = { var = GCW_legitimacy_political_power_factor min = -0.25 max = 0.25 }
	add_to_variable = { GCW_legitimacy_compliance_gain = -0.025 }
	clamp_variable = { var = GCW_legitimacy_compliance_gain min = 0 max = 0.25 }
}

GCW_increase_influence_small = {
	custom_effect_tooltip = GCW_increase_influence_small_tt
	add_to_variable = { GCW_influence = 5 }
}
GCW_increase_influence_large = {
	custom_effect_tooltip = GCW_increase_influence_large_tt
	add_to_variable = { GCW_influence = 10 }
}
GCW_decrease_influence_small = {
	custom_effect_tooltip = GCW_decrease_influence_small_tt
	subtract_from_variable = { GCW_influence = 5 }
}
GCW_decrease_influence_large = {
	custom_effect_tooltip = GCW_decrease_influence_large_tt
	subtract_from_variable = { GCW_influence = 10 }
}

GCW_war_balancing_script_main = {
	if = {
		limit = {
			check_variable = { war_balancing_script_count < 32 }
		}
		GCW_war_balancing_script_1 = yes
	}
	else = {
		GCW_war_balancing_script_2 = yes
	}
	add_to_variable = { war_balancing_script_count = 1 }
}

GCW_war_balancing_script_1 = {
	for_each_scope_loop = {
		array = global.GCW_contenders

		add_to_variable = { global.GCW_average_num_controlled_states = num_controlled_states }
	}

	divide_variable = { global.GCW_average_num_controlled_states = global.GCW_contenders^num }
	round_variable = global.GCW_average_num_controlled_states

	for_each_scope_loop = {
		array = global.GCW_contenders

		set_temp_variable = { temp_num_controlled_states = num_controlled_states }
		subtract_from_temp_variable = { temp_num_controlled_states = global.GCW_average_num_controlled_states }

		if = {
			limit = {
				check_variable = { temp_num_controlled_states > 4 }
				is_ai = yes
			}
			add_ideas = GCW_hidden_debuff_1
			remove_ideas = {
				GCW_hidden_debuff_2
				GCW_hidden_debuff_3
			}
		}
		else_if = {
			limit = {
				check_variable = { temp_num_controlled_states > 2 }
				is_ai = yes
			}
			add_ideas = GCW_hidden_debuff_2
			remove_ideas = {
				GCW_hidden_debuff_1
				GCW_hidden_debuff_3
			}
		}
		else_if = {
			limit = {
				check_variable = { temp_num_controlled_states > 0 }
				is_ai = yes
			}
			add_ideas = GCW_hidden_debuff_3
			remove_ideas = {
				GCW_hidden_debuff_1
				GCW_hidden_debuff_2
			}
		}
		# player debuff
		else_if = {
			limit = {
				check_variable = { temp_num_controlled_states > 6 }
			}
			add_ideas = GCW_hidden_debuff_2
			remove_ideas = {
				GCW_hidden_debuff_1
				GCW_hidden_debuff_3
			}
		}
		else_if = {
			limit = {
				check_variable = { temp_num_controlled_states > 4 }
			}
			add_ideas = GCW_hidden_debuff_3
			remove_ideas = {
				GCW_hidden_debuff_1
				GCW_hidden_debuff_2
			}
		}
		else = {
			remove_ideas = {
				GCW_hidden_debuff_1
				GCW_hidden_debuff_2
				GCW_hidden_debuff_3
			}
		}
	}

	clear_variable = global.GCW_average_num_controlled_states
}

GCW_war_balancing_script_2 = {
	for_each_scope_loop = {
		array = global.GCW_contenders

		if = {
			limit = { is_ai = yes }
			add_to_variable = { global.GCW_average_surrender_progress = surrender_progress }
		}
	}

	multiply_variable = { global.GCW_average_surrender_progress = 100 }
	divide_variable = { global.GCW_average_surrender_progress = global.GCW_contenders^num }
	round_variable = global.GCW_average_surrender_progress
	divide_variable = { global.GCW_average_surrender_progress = 100 }

	for_each_scope_loop = {
		array = global.GCW_contenders

		set_temp_variable = { temp_surrender_progress = surrender_progress }
		subtract_from_temp_variable = { temp_surrender_progress = global.GCW_average_surrender_progress }

		if = {
			limit = {
				check_variable = { temp_surrender_progress > 0.30 }
			}
			add_ideas = GCW_hidden_debuff_1
			remove_ideas = {
				GCW_hidden_debuff_2
				GCW_hidden_debuff_3
			}
		}
		else_if = {
			limit = {
				check_variable = { temp_surrender_progress > 0.15 }
			}
			add_ideas = GCW_hidden_debuff_2
			remove_ideas = {
				GCW_hidden_debuff_1
				GCW_hidden_debuff_3
			}
		}
		else_if = {
			limit = {
				check_variable = { temp_surrender_progress > 0 }
			}
			add_ideas = GCW_hidden_debuff_3
			remove_ideas = {
				GCW_hidden_debuff_1
				GCW_hidden_debuff_2
			}
		}
		else = {
			remove_ideas = {
				GCW_hidden_debuff_1
				GCW_hidden_debuff_2
				GCW_hidden_debuff_3
			}
		}

		if = {
			limit = { is_ai = no }
			remove_ideas = {
				GCW_hidden_debuff_1
				GCW_hidden_debuff_2
				GCW_hidden_debuff_3
			}
		}
	}

	clear_variable = global.GCW_average_surrender_progress
}

anti_heydrich_pact_script = {
	for_each_scope_loop = {
		array = global.GCW_contenders

		if = {
			limit = { has_country_flag = anti_heydrich_pact }
			every_owned_state = {
				limit = {
					NOT = { is_controlled_by = PREV }
					NOT = { is_controlled_by = HGR }
				}
				PREV = { set_state_controller = PREV }
			}
		}
	}

	if = {
		limit = { country_exists = SGR }
		SGR = {
			create_faction = anti_heydrich_pact_faction
			if = {
				limit = {
					country_exists = BGR
					BGR = { has_country_flag = anti_heydrich_pact }
				}
				BGR = { white_peace = SGR }
				SGR = { add_to_faction = BGR }
			}
			if = {
				limit = {
					country_exists = GGR
					GGR = { has_country_flag = anti_heydrich_pact }
				}
				GGR = { white_peace = SGR }
				if = {
					limit = {
						country_exists = BGR
						BGR = { has_country_flag = anti_heydrich_pact }
					}
					GGR = { white_peace = BGR }
				}
				SGR = { add_to_faction = GGR }
			}
			every_country = {
				news_event = { id = WORLD.28 days = 1 }
			}
		}
	}
	else_if = {
		limit = { country_exists = BGR }
		BGR = {
			create_faction = anti_heydrich_pact_faction
			if = {
				limit = {
					country_exists = GGR
					GGR = { has_country_flag = anti_heydrich_pact }
				}
				GGR = { white_peace = BGR }
				BGR = { add_to_faction = GGR }
			}
			every_country = {
				news_event = { id = WORLD.28 days = 1 }
			}
		}
	}
	set_global_flag = anti_heydrich_pact_formed

	# Faction Status
	BGR = { add_ideas = Anti_Heydrich_Pact }
	SGR = { add_ideas = Anti_Heydrich_Pact }
	GGR = { add_ideas = Anti_Heydrich_Pact }
}

setup_speer_gcw_navy = {
	GER = {
		transfer_ship = {
			prefer_name = "Z11 'Bernd von Arnim'"
		    type = destroyer
		    target = SGR
		}
		transfer_ship = {
			prefer_name = "Z26"
		    type = destroyer
		    target = SGR
		}
		transfer_ship = {
			prefer_name = "K20"
		    type = corvette
		    target = SGR
		}
		transfer_ship = {
			prefer_name = "K21"
		    type = corvette
		    target = SGR
		}
		transfer_ship = {
			prefer_name = "K26"
		    type = corvette
		    target = SGR
		}
		transfer_ship = {
			prefer_name = "F24"
		    type = frigate
		    target = SGR
		}
		transfer_ship = {
			prefer_name = "F25"
		    type = frigate
		    target = SGR
		}
		transfer_ship = {
			prefer_name = "U-4323"
		    type = submarine
		    target = SGR
		}
		transfer_ship = {
			prefer_name = "U-4333"
		    type = submarine
		    target = SGR
		}
		transfer_ship = {
			prefer_name = "U-4340"
		    type = submarine
		    target = SGR
		}
		transfer_ship = {
			prefer_name = "U-4342"
		    type = submarine
		    target = SGR
		}
		transfer_ship = {
			prefer_name = "U-4341"
		    type = submarine
		    target = SGR
		}
		transfer_ship = {
			prefer_name = "U-901"
		    type = submarine
		    target = SGR
		}
		transfer_ship = {
			prefer_name = "U-902"
		    type = submarine
		    target = SGR
		}
		transfer_ship = {
			prefer_name = "U-903"
		    type = submarine
		    target = SGR
		}
		transfer_ship = {
			prefer_name = "U-904"
		    type = submarine
		    target = SGR
		}
		transfer_ship = {
			prefer_name = "U-905"
		    type = submarine
		    target = SGR
		}
		transfer_ship = {
			prefer_name = "U-906"
		    type = submarine
		    target = SGR
		}
		transfer_ship = {
			prefer_name = "U-926"
		    type = submarine
		    target = SGR
		}
		transfer_ship = {
			prefer_name = "U-927"
		    type = submarine
		    target = SGR
		}
		transfer_ship = {
			prefer_name = "U-928"
		    type = submarine
		    target = SGR
		}
		transfer_ship = {
			prefer_name = "Blücher"
		    type = cruiser
		    target = SGR
		}
		transfer_ship = {
			prefer_name = "Admiral Hipper"
		    type = cruiser
		    target = SGR
		}
		transfer_ship = {
			prefer_name = "Köln"
		    type = light_cruiser
		    target = SGR
		}
		transfer_ship = {
			prefer_name = "F45"
		    type = frigate
		    target = SGR
		}
		transfer_ship = {
			prefer_name = "F47"
		    type = frigate
		    target = SGR
		}
		transfer_ship = {
			prefer_name = "F48"
		    type = frigate
		    target = SGR
		}
		transfer_ship = {
			prefer_name = "F49"
		    type = frigate
		    target = SGR
		}
		transfer_ship = {
			prefer_name = "F6"
		    type = frigate
		    target = SGR
		}
	}
}

setup_goering_gcw_navy = {
	GER = {
		transfer_ship = {
			prefer_name = "Tirpitz"
		    type = battleship
		    target = GGR
		}
		transfer_ship = {
			prefer_name = "Ludendorff"
		    type = battleship
		    target = GGR
		}
		transfer_ship = {
			prefer_name = "Z21 'Wilhelm Heidkamp'"
		    type = destroyer
		    target = GGR
		}
		transfer_ship = {
			prefer_name = "Z19 'Hermann Künne'"
		    type = destroyer
		    target = GGR
		}
		transfer_ship = {
			prefer_name = "Z17 'Diether von Roeder'"
		    type = destroyer
		    target = GGR
		}
		transfer_ship = {
			prefer_name = "U-3122"
		    type = submarine
		    target = GGR
		}
		transfer_ship = {
			prefer_name = "U-3123"
		    type = submarine
		    target = GGR
		}
		transfer_ship = {
			prefer_name = "U-3124"
		    type = submarine
		    target = GGR
		}
		transfer_ship = {
			prefer_name = "U-3125"
		    type = submarine
		    target = GGR
		}
		transfer_ship = {
			prefer_name = "U-3126"
		    type = submarine
		    target = GGR
		}
		transfer_ship = {
			prefer_name = "U-4365"
		    type = submarine
		    target = GGR
		}
		transfer_ship = {
			prefer_name = "U-4463"
		    type = submarine
		    target = GGR
		}
		transfer_ship = {
			prefer_name = "U-4264"
		    type = submarine
		    target = GGR
		}
		transfer_ship = {
			prefer_name = "F44"
		    type = frigate
		    target = GGR
		}
		transfer_ship = {
			prefer_name = "F46"
		    type = frigate
		    target = GGR
		}
		transfer_ship = {
			prefer_name = "K66"
		    type = corvette
		    target = GGR
		}
		transfer_ship = {
			prefer_name = "K67"
		    type = corvette
		    target = GGR
		}
		transfer_ship = {
			prefer_name = "K69"
		    type = corvette
		    target = GGR
		}
	}
}

setup_heydrich_gcw_navy = {
	GER = {
		transfer_ship = {
			prefer_name = "Von Hohenheim"
		    type = cruiser
		    target = HGR
		}
		transfer_ship = {
			prefer_name = "Schwarze Sonne"
		    type = cruiser
		    target = HGR
		}
		transfer_ship = {
			prefer_name = "U-926"
		    type = submarine
		    target = HGR
		}
		transfer_ship = {
			prefer_name = "U-927"
		    type = submarine
		    target = HGR
		}
		transfer_ship = {
			prefer_name = "U-928"
		    type = submarine
		    target = HGR
		}
		transfer_ship = {
			prefer_name = "K29"
		    type = corvette
		    target = HGR
		}
		transfer_ship = {
			prefer_name = "K24"
		    type = corvette
		    target = HGR
		}
		transfer_ship = {
			prefer_name = "K22"
		    type = corvette
		    target = HGR
		}
		transfer_ship = {
			prefer_name = "F29"
		    type = frigate
		    target = HGR
		}
		transfer_ship = {
			prefer_name = "F32"
		    type = corvette
		    target = HGR
		}
		transfer_ship = {
			prefer_name = "K66"
		    type = corvette
		    target = HGR
		}
		transfer_ship = {
			prefer_name = "K67"
		    type = corvette
		    target = HGR
		}
	}
}

setup_bormann_gcw_navy = {
	CRI = {
		transfer_ship = {
			prefer_name = "U-4267"
		    type = submarine
		    target = GER
		}
		transfer_ship = {
			prefer_name = "U-4268"
		    type = submarine
		    target = GER
		}
		transfer_ship = {
			prefer_name = "U-4269"
		    type = submarine
		    target = GER
		}
		transfer_ship = {
			prefer_name = "U-4270"
		    type = submarine
		    target = GER
		}
		transfer_ship = {
			prefer_name = "U-4479"
		    type = submarine
		    target = GER
		}
		transfer_ship = {
			prefer_name = "Seydlitz"
		    type = cruiser
		    target = GER
		}
		transfer_ship = {
			prefer_name = "Drache"
		    type = frigate
		    target = GER
		}
		transfer_ship = {
			prefer_name = "Brummer"
		    type = frigate
		    target = GER
		}
		transfer_ship = {
			prefer_name = "K109"
		    type = corvette
		    target = GER
		}
		transfer_ship = {
			prefer_name = "Z5 'Paul Jacobi'"
		    type = destroyer
		    target = GER
		}
		transfer_ship = {
			prefer_name = "K103"
		    type = corvette
		    target = GER
		}
		transfer_ship = {
			prefer_name = "K107"
		    type = corvette
		    target = GER
		}
		transfer_ship = {
			prefer_name = "K105"
		    type = corvette
		    target = GER
		}
	}
}
